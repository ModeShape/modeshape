#
# ModeShape (http://www.modeshape.org)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# 

repositoryEngineIsNotRunning = The repository engine is not currently running

errorDeterminingIfConnectionIsAlive = Unexpected error trying to determine if connector "{0}" is alive.
errorDeterminingTotalInUseConnections = Unexpected error trying to determine if number of in use connections for  "{0}".
errorDeterminingTotalActiveSessions = Unexpected error trying to determine if number of active sessions for  "{0}".
errorGettingRepositoryFromEngine = Unexpected error trying to obtain repository "{0}" from engine.
errorGettingPropertiesFromManagedObject = = Unexpected error trying to obtain properties for ManagedObject "{0}".
errorBindingToJNDI = Error trying to obtain repository "{0}" from engine.

logModeShapeBoundToJNDI = ModeShape Repositories bound to JNDI at name "{0}".
logModeShapeUnBoundToJNDI = Unbound ModeShape Repositories unbound from JNDI name "{0}" 

# Subsystem
modeshape=The configuration of the ModeShape subsystem
modeshape.add = Add the ModeShape subsystem
modeshape.remove = Remove the ModeShape subsystem

#Webapps
modeshape.webapp = ModeShape web application
modeshape.webapp.add = Deploy a ModeShape web application
modeshape.webapp.remove = Undeploy a ModeShape web application
modeshape.webapp.name = The name of the web application (as located under the modeshape main module /deployments)
modeshape.webapp.exploded = Indicates if a web application is packaged exploded or nor
modeshape.webapp.auto-deploy = Indicates if the web application should be auto deployed at subsystem startup or not

# Repository
modeshape.repository = ModeShape repository
modeshape.repository.add = Add ModeShape repositories
modeshape.repository.remove = Remove ModeShape repositories
modeshape.repository.name = The name of the repository
modeshape.repository.configuration = Repository configuration
modeshape.repository.cache-name = The name of the Infinispan cache that is to be used for storing this repository's content
modeshape.repository.cache-container = The name of the Infinispan cache container that contains the cache to be used for storing this repository's content
modeshape.repository.jndi-name = The optional name in JNDI where this repository is to be registered
modeshape.repository.enable-monitoring = Enable monitoring of the repository
modeshape.repository.garbage-collection-thread-pool = The scheduled thread pool to be used for garbage collection
modeshape.repository.garbage-collection-initial-time = The initial local time that garbage collection should first be run after startup
modeshape.repository.garbage-collection-interval = The number of hours between garbage collection runs
modeshape.repository.document-optimization-thread-pool = The scheduled thread pool to be used for document optimization
modeshape.repository.document-optimization-initial-time = The initial local time that document optimization should first be run after startup
modeshape.repository.document-optimization-interval = The number of hours between document optimization runs
modeshape.repository.document-optimization-child-count-target = The maximum number of children that are ideally stored in each document/page
modeshape.repository.document-optimization-child-count-tolerance = The range that the actual number of children in a document/page can vary above the target before the documents are split, or below the target before documents are merged
modeshape.repository.security-domain = The name of the security domain used for JAAS authentication and authorization of repository users
modeshape.repository.anonymous-roles= The roles given to all anonymous users for accessing and changing repository content
modeshape.repository.anonymous-roles.anonymous-role = The roles given to all anonymous users for accessing and changing repository content
modeshape.repository.anonymous-username = The username that is used for all anonymous users
modeshape.repository.use-anonymous-upon-failed-authentication = Specify whether users that fail authentication should be automatically logged in as anonymous users
modeshape.repository.default-workspace = The name of the workspace that is used when clients don't specify a workspace name
modeshape.repository.predefined-workspace-names = The list of workspace names that exist when the repository is started
modeshape.repository.predefined-workspace-names.predefined-workspace-name = The name of a workspace that exists when the repository is started
modeshape.repository.allow-workspace-creation = Specifies whether workspaces can be created (and removed) by clients, if those clients are authorized
modeshape.repository.workspaces-cache-container = Specifies the name of the Infinispan cache container in which the workspace caches will be found
modeshape.repository.minimum-binary-size = The size threshold that dictates whether binary values should be stored in the binary store. Binary values smaller than this value are stored with the node, whereas binary values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value.
modeshape.repository.minimum-string-size = The size threshold that dictates whether String values should be stored in the binary store. String values smaller than this value are stored with the node, whereas string values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value.
modeshape.repository.default-initial-content = The path to the initial content file which should be imported by default in all workspaces
modeshape.repository.workspaces-initial-content = The mapping from the name of a predefined workspace to an initial content file
modeshape.repository.workspaces-initial-content.initial-content = The path to an initial content file
modeshape.repository.node-types = The list of CND file which should be imported at repository startup
modeshape.repository.node-types.node-type = The URI of a CND file which should be imported ar repository startup
modeshape.repository.journaling = The configuration for the change journal
modeshape.repository.journal-relative-to = The base directory in which to store journal contents.
modeshape.repository.journal-path = The folder within 'relative-to' where to store the journal contents.
modeshape.repository.journal-max-days-to-keep-records = The maximum number of days records should be kept on disk before removing them.
modeshape.repository.journal-async-writes = Whether writes to disk should be done asynchronously or not.
modeshape.repository.journal-gc-thread-pool = Name of the thread pool that should be used for removing older journal entries.
modeshape.repository.journal-gc-initial-time = The local time that the first garbage collection process should be run.

# Sequencer
modeshape.repository.sequencer = ModeShape sequencer
modeshape.repository.sequencer.add = Add ModeShape sequencer
modeshape.repository.sequencer.remove = Remove ModeShape sequencer
modeshape.repository.sequencer.name = The name of a sequencer
modeshape.repository.sequencer.description = The description for a sequencer
modeshape.repository.sequencer.classname = The fully-qualified name (including packages) of the sequencer class, or optionally the alias of one of the built-in sequencers.
modeshape.repository.sequencer.module = The name of the module that contains the sequencer class.
modeshape.repository.sequencer.path-expressions = The expressions that describes the paths upon which this sequencer operates and the paths where the sequencer output is written.
modeshape.repository.sequencer.path-expressions.path-expression = An expression that describes the paths upon which this sequencer operates and the paths where the sequencer output is written.
modeshape.repository.sequencer.properties = The custom name-value pairs for the sequencer
modeshape.repository.sequencer.properties.property = A name-value pair for the sequencer

# Index Provider
modeshape.repository.index-provider = ModeShape index provider
modeshape.repository.index-provider.add = Add ModeShape index provider
modeshape.repository.index-provider.remove = Remove ModeShape index provider
modeshape.repository.index-provider.name = The name of an index provider
modeshape.repository.index-provider.description = The description for a index provider
modeshape.repository.index-provider.classname = The fully-qualified name (including packages) of the index provider class, or optionally the alias of one of the built-in index providers.
modeshape.repository.index-provider.module = The name of the module that contains the index provider class.
modeshape.repository.index-provider.properties = The custom name-value pairs for the index provider
modeshape.repository.index-provider.properties.property = A name-value pair for the index provider

# Index Definition
modeshape.repository.index = ModeShape index definition
modeshape.repository.index.add = Add ModeShape index definition
modeshape.repository.index.remove = Remove ModeShape index definition
modeshape.repository.index.name = The name of an index definition
modeshape.repository.index.description = The description for a index definition
modeshape.repository.index.provider-name = The name of the index provider that will own this index.
modeshape.repository.index.node-type-name = The name of the node type whose nodes are placed in this index 
modeshape.repository.index.columns = The comma-separated column definitions for this index 
modeshape.repository.index.properties = The custom name-value pairs for the index provider
modeshape.repository.index.properties.property = A name-value pair for the index provider

#External sources
modeshape.repository.source = External source definition
modeshape.repository.source.add = Add an External Source
modeshape.repository.source.remove = Remove an External Source
modeshape.repository.source.name = The name of an external source
modeshape.repository.source.description = The description for an external source
modeshape.repository.source.classname = The fully-qualified name (including packages) of the connector class
modeshape.repository.source.module = The name of the module that contains the connector class.
modeshape.repository.source.projections = The expressions that describes a set of projections mapping
modeshape.repository.source.projections.projection = The expressions that describes a projection mapping
modeshape.repository.source.cacheTtlSeconds = The number of seconds an external node should be stored in the workspace cache
modeshape.repository.source.readonly = Whether source supports only reads or writes as well.
modeshape.repository.source.queryable = Whether content exposed by an external source should be queryable or not
modeshape.repository.source.properties = The custom name-value pairs for the source
modeshape.repository.source.properties.property = A name-value pair for the source


# Text extractor
modeshape.repository.text-extractor = ModeShape text extractor
modeshape.repository.text-extractor.add = Add ModeShape text extractor
modeshape.repository.text-extractor.remove = Remove ModeShape text extractor
modeshape.repository.text-extractor.name = The name of a text extractor
modeshape.repository.text-extractor.description = The description for a text extractor
modeshape.repository.text-extractor.classname = The fully-qualified name (including packages) of the text extractor class, or optionally the alias of one of the built-in text extractors.
modeshape.repository.text-extractor.module = The name of the module that contains the text extractor class.
modeshape.repository.text-extractor.properties = The set of name-value pairs for the text extractor
modeshape.repository.text-extractor.properties.property = A name-value pair for the text extractor

# Authenticators
modeshape.repository.authenticator = ModeShape authenticator
modeshape.repository.authenticator.add = Add ModeShape authenticator
modeshape.repository.authenticator.remove = Remove ModeShape authenticator
modeshape.repository.authenticator.name = The name of a authenticator
modeshape.repository.authenticator.description = The description for a authenticator
modeshape.repository.authenticator.classname = The fully-qualified name (including packages) of the authenticator class, or optionally the alias of one of the built-in authenticators.
modeshape.repository.authenticator.module = The name of the module that contains the authenticator class.
modeshape.repository.authenticator.properties = The set of name-value pairs for the authenticator
modeshape.repository.authenticator.properties.property = A name-value pair for the authenticator


# Storage
modeshape.repository.configuration.index-storage=Storage of index
modeshape.repository.configuration.binary-storage=Binary storage

# Binary storage
modeshape.repository.binary-storage = Specifies where the repository's binary values are stored
modeshape.repository.binary-storage.add = Add binary storage 
modeshape.repository.binary-storage.remove = Remove the binary storage configuration, resulting in the binaries being stored on the local file system
modeshape.repository.binary-storage.storage-type = Valid values: file, cache, database, composite, custom

modeshape.repository.file-binary-storage = Store binary values on the file system
modeshape.repository.file-binary-storage.describe = Specify that the repository binary values are to be stored on the file system
modeshape.repository.file-binary-storage.add = Store binary values on the file system
modeshape.repository.file-binary-storage.remove = Remove the binary storage configuration, resulting in the binaries being stored on the local file system
modeshape.repository.file-binary-storage.binary-storage-type = The type of binary storage 
modeshape.repository.file-binary-storage.minimum-binary-size = The size threshold that dictates whether binary values should be stored in the binary store. Binary values smaller than this value are stored with the node, whereas binary values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.file-binary-storage.minimum-string-size = The size threshold that dictates whether string values should be stored in the binary store. String values smaller than this value are stored with the node, whereas string values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.file-binary-storage.path = The path to the directory where the binary values are to be stored
modeshape.repository.file-binary-storage.relative-to = The (optional) path to the directory that the 'path' parameter is relative to
modeshape.repository.file-binary-storage.store-name = An implementation-supplied name for this binary store

modeshape.repository.cache-binary-storage = Store binary values in Infinispan
modeshape.repository.cache-binary-storage.describe = Specify that the repository binary values are to be stored in Infinispan
modeshape.repository.cache-binary-storage.add = Store binary values in Infinispan
modeshape.repository.cache-binary-storage.remove = Remove the binary storage configuration, resulting in the binaries being stored on the local file system
modeshape.repository.cache-binary-storage.binary-storage-type = The type of binary storage 
modeshape.repository.cache-binary-storage.minimum-binary-size = The size threshold that dictates whether binary values should be stored in the binary store. Binary values smaller than this value are stored with the node, whereas binary values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.cache-binary-storage.minimum-string-size = The size threshold that dictates whether string values should be stored in the binary store. String values smaller than this value are stored with the node, whereas string values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.cache-binary-storage.data-cache-name = The name of the Infinispan cache where the binary values will be stored. If not provided, the default will be '<repositoryName>-binary-data'.
modeshape.repository.cache-binary-storage.metadata-cache-name = The name of the Infinispan cache where the binary metadata will be stored. If not provided, the default will be '<repositoryName>-binary-metadata'.
modeshape.repository.cache-binary-storage.chunk-size = The size (in bytes) of a segment which dictates into how many segments a binary value is split. Each chunk is stored as an entry in the case. If not provided, defaults to 1048576 bytes (1 MB).
modeshape.repository.cache-binary-storage.cache-container = The name of the Infinispan container where the caches are found. If not provided, the default will be the same container used for the repository content.
modeshape.repository.cache-binary-storage.store-name = An implementation-supplied name for this binary store

modeshape.repository.db-binary-storage = Store binary values in a SQL database
modeshape.repository.db-binary-storage.describe = Specify that the repository binary values are to be stored in a SQL database
modeshape.repository.db-binary-storage.add = Store binary values in a SQL database
modeshape.repository.db-binary-storage.remove = Remove the binary storage configuration, resulting in the binaries being stored on the local file system
modeshape.repository.db-binary-storage.binary-storage-type = The type of binary storage 
modeshape.repository.db-binary-storage.minimum-binary-size = The size threshold that dictates whether binary values should be stored in the binary store. Binary values smaller than this value are stored with the node, whereas binary values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.db-binary-storage.minimum-string-size = The size threshold that dictates whether string values should be stored in the binary store. String values smaller than this value are stored with the node, whereas string values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.db-binary-storage.data-source-jndi-name = The name in JNDI for the JDBC data source that should be used to store the binary values.
modeshape.repository.db-binary-storage.store-name = An implementation-supplied name for this binary store

modeshape.repository.composite-binary-storage = Store binary values in one of many named binary stores
modeshape.repository.composite-binary-storage.describe = Specify that the repository binary values are to be stored in a composite binary store
modeshape.repository.composite-binary-storage.add = Store binary values in the binary store
modeshape.repository.composite-binary-storage.remove = Remove the binary storage configuration, resulting in the binaries being stored on the local file system
modeshape.repository.composite-binary-storage.minimum-binary-size = The size threshold that dictates whether binary values should be stored in the binary store. Binary values smaller than this value are stored with the node, whereas binary values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.composite-binary-storage.minimum-string-size = The size threshold that dictates whether string values should be stored in the binary store. String values smaller than this value are stored with the node, whereas string values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.composite-binary-storage.store-name = An implementation-supplied name for this binary store
modeshape.repository.composite-binary-storage.nested-stores = The nested binary stores configurations
modeshape.repository.composite-binary-storage.nested-stores.store-name = The name of binary store nested within a composite store
modeshape.repository.composite-binary-storage.nested-storage-type-file = A container of one or mode file binary storages
modeshape.repository.composite-binary-storage.nested-storage-type-cache = A container of one or mode cache binary storages
modeshape.repository.composite-binary-storage.nested-storage-type-db = A container of one or mode db binary storages
modeshape.repository.composite-binary-storage.nested-storage-type-custom = A container of one or mode custom binary storages

modeshape.repository.custom-binary-storage = Store binary values in a custom store
modeshape.repository.custom-binary-storage.describe = Specify that the repository binary values are to be stored in a custom store
modeshape.repository.custom-binary-storage.add = Store binary values in a custom store
modeshape.repository.custom-binary-storage.remove = Remove the binary storage configuration, resulting in the binaries being stored on the local file system
modeshape.repository.custom-binary-storage.binary-storage-type = The type of binary storage 
modeshape.repository.custom-binary-storage.minimum-binary-size = The size threshold that dictates whether binary values should be stored in the binary store. Binary values smaller than this value are stored with the node, whereas binary values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.custom-binary-storage.minimum-string-size = The size threshold that dictates whether string values should be stored in the binary store. String values smaller than this value are stored with the node, whereas string values with a size equal to or greater than this limit will be stored separately from the node and in the binary store, keyed by the SHA-1 hash of the value. This is a space and performance optimization that stores each unique large value only once.
modeshape.repository.custom-binary-storage.classname = The fully-qualified name of the class used for index storage
modeshape.repository.custom-binary-storage.module = The name of the module that contains the specified index storage class
modeshape.repository.custom-binary-storage.store-name = An implementation-supplied name for this binary store

# metrics
modeshape.repository.session-count-previous-60-seconds = The number of sessions that were active during the previous 60 seconds window.
modeshape.repository.session-count-previous-60-minutes = The number of sessions that were active during the previous 60 minutes window.
modeshape.repository.session-count-previous-24-hours = The number of sessions that were active during the previous 24 hours window.
modeshape.repository.session-count-previous-7-days = The number of sessions that were active during the previous 7 days window.
modeshape.repository.session-count-previous-52-weeks = The number of sessions that were active during the previous 52 weeks window.

modeshape.repository.query-count-previous-60-seconds = The number of queries that were executing during the previous 60 seconds window.
modeshape.repository.query-count-previous-60-minutes = The number of queries that were executing during the previous 60 minutes window.
modeshape.repository.query-count-previous-24-hours = The number of queries that were executing during the previous 24 hours window.
modeshape.repository.query-count-previous-7-days = The number of queries that were executing during the previous 7 days window.
modeshape.repository.query-count-previous-52-weeks = The number of queries that were executing during the previous 52 weeks window.

modeshape.repository.workspace-count-previous-60-seconds = The number of workspaces that existed during the previous 60 seconds window.
modeshape.repository.workspace-count-previous-60-minutes = The number of workspaces that existed during the previous 60 minutes window.
modeshape.repository.workspace-count-previous-24-hours = The number of workspaces that existed during the previous 24 hours window.
modeshape.repository.workspace-count-previous-7-days = The number of workspaces that existed during the previous 7 days window.
modeshape.repository.workspace-count-previous-52-weeks = The number of workspaces that existed during the previous 52 weeks window.

modeshape.repository.listener-count-previous-60-seconds = The number of listeners registered during the previous 60 seconds window.
modeshape.repository.listener-count-previous-60-minutes = The number of listeners registered during the previous 60 minutes window.
modeshape.repository.listener-count-previous-24-hours = The number of listeners registered during the previous 24 hours window.
modeshape.repository.listener-count-previous-7-days = The number of listeners registered during the previous 7 days window.
modeshape.repository.listener-count-previous-52-weeks = The number of listeners registered during the previous 52 weeks window.

modeshape.repository.event-queue-size-previous-60-seconds = The number of events at the end of the previous 60 seconds window that have yet to be processed and sent to listeners.
modeshape.repository.event-queue-size-previous-60-minutes = The number of events at the end of the previous 60 minutes window that have yet to be processed and sent to listeners.
modeshape.repository.event-queue-size-previous-24-hours = The number of events at the end of the previous 24 hours window that have yet to be processed and sent to listeners.
modeshape.repository.event-queue-size-previous-7-days = The number of events at the end of the previous 7 days window that have yet to be processed and sent to listeners.
modeshape.repository.event-queue-size-previous-52-weeks = The number of events at the end of the previous 52 weeks window that have yet to be processed and sent to listeners.

modeshape.repository.event-count-previous-60-seconds = The number of events that have been sent to at least one listener during the previous 60 seconds window.
modeshape.repository.event-count-previous-60-minutes = The number of events that have been sent to at least one listener during the previous 60 minutes window.
modeshape.repository.event-count-previous-24-hours = The number of events that have been sent to at least one listener during the previous 24 hours window.
modeshape.repository.event-count-previous-7-days = The number of events that have been sent to at least one listener during the previous 7 days window.
modeshape.repository.event-count-previous-52-weeks = The number of events that have been sent to at least one listener during the previous 52 weeks window.

modeshape.repository.session-scoped-lock-count-previous-60-seconds = The number of session-scoped locks that were held by clients during the previous 60 seconds window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.session-scoped-lock-count-previous-60-minutes = The number of session-scoped locks that were held by clients during the previous 60 minutes window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.session-scoped-lock-count-previous-24-hours = The number of session-scoped locks that were held by clients during the previous 24 hours window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.session-scoped-lock-count-previous-7-days = The number of session-scoped locks that were held by clients during the previous 7 days window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.session-scoped-lock-count-previous-52-weeks = The number of session-scoped locks that were held by clients during the previous 52 weeks window. The values go up or down from one window to the next as clients lock and unlock nodes.

modeshape.repository.open-scoped-lock-count-previous-60-seconds = The number of locks that were held by clients during the previous 60 seconds window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.open-scoped-lock-count-previous-60-minutes = The number of locks that were held by clients during the previous 60 minutes window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.open-scoped-lock-count-previous-24-hours = The number of locks that were held by clients during the previous 24 hours window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.open-scoped-lock-count-previous-7-days = The number of locks that were held by clients during the previous 7 days window. The values go up or down from one window to the next as clients lock and unlock nodes.
modeshape.repository.open-scoped-lock-count-previous-52-weeks = The number of locks that were held by clients during the previous 52 weeks window. The values go up or down from one window to the next as clients lock and unlock nodes.

modeshape.repository.session-saves-previous-60-seconds = The number of save operations called on sessions during the previous 60 seconds window.
modeshape.repository.session-saves-previous-60-minutes = The number of save operations called on sessions during the previous 60 minutes window.
modeshape.repository.session-saves-previous-24-hours = The number of save operations called on sessions during the previous 24 hours window.
modeshape.repository.session-saves-previous-7-days = The number of save operations called on sessions during the previous 7 days window.
modeshape.repository.session-saves-previous-52-weeks = The number of save operations called on sessions during the previous 52 weeks window.

modeshape.repository.node-changes-previous-60-seconds = The number of nodes that were created, updated or deleted during the previous 60 seconds window due to session saves, workspace imports, or version checkin calls.
modeshape.repository.node-changes-previous-60-minutes = The number of nodes that were created, updated or deleted during the previous 60 minutes window due to session saves, workspace imports, or version checkin calls.
modeshape.repository.node-changes-previous-24-hours = The number of nodes that were created, updated or deleted during the previous 24 hours window due to session saves, workspace imports, or version checkin calls.
modeshape.repository.node-changes-previous-7-days = The number of nodes that were created, updated or deleted during the previous 7 days window due to session saves, workspace imports, or version checkin calls.
modeshape.repository.node-changes-previous-52-weeks = The number of nodes that were created, updated or deleted during the previous 52 weeks window due to session saves, workspace imports, or version checkin calls.

modeshape.repository.sequenced-queue-size-previous-60-seconds = The number of nodes at the end of the previous 60 seconds window that have yet to be sequenced.
modeshape.repository.sequenced-queue-size-previous-60-minutes = The number of nodes at the end of the previous 60 minutes window that have yet to be sequenced.
modeshape.repository.sequenced-queue-size-previous-24-hours = The number of nodes at the end of the previous 24 hours window that have yet to be sequenced.
modeshape.repository.sequenced-queue-size-previous-7-days = The number of nodes at the end of the previous 7 days window that have yet to be sequenced.
modeshape.repository.sequenced-queue-size-previous-52-weeks = The number of nodes at the end of the previous 52 weeks window that have yet to be sequenced.

modeshape.repository.sequenced-count-previous-60-seconds = The number of nodes that were sequenced during the previous 60 seconds window.
modeshape.repository.sequenced-count-previous-60-minutes = The number of nodes that were sequenced during the previous 60 minutes window.
modeshape.repository.sequenced-count-previous-24-hours = The number of nodes that were sequenced during the previous 24 hours window.
modeshape.repository.sequenced-count-previous-7-days = The number of nodes that were sequenced during the previous 7 days window.
modeshape.repository.sequenced-count-previous-52-weeks = The number of nodes that were sequenced during the previous 52 weeks window.

modeshape.repository.query-execution-time-previous-60-seconds = The metric measuring the amount of time required to execute queries in the previous 60 seconds window.
modeshape.repository.query-execution-time-previous-60-minutes = The metric measuring the amount of time required to execute queries in the previous 60 minutes window.
modeshape.repository.query-execution-time-previous-24-hours = The metric measuring the amount of time required to execute queries in the previous 24 hours window.
modeshape.repository.query-execution-time-previous-7-days = The metric measuring the amount of time required to execute queries in the previous 7 days window.
modeshape.repository.query-execution-time-previous-52-weeks = The metric measuring the amount of time required to execute queries in the previous 52 weeks window.

modeshape.repository.session-lifetime-previous-60-seconds = The metric measuring the how long sessions were kept open in the previous 60 seconds window.
modeshape.repository.session-lifetime-previous-60-minutes = The metric measuring the how long sessions were kept open in the previous 60 minutes window.
modeshape.repository.session-lifetime-previous-24-hours = The metric measuring the how long sessions were kept open in the previous 24 hours window.
modeshape.repository.session-lifetime-previous-7-days = The metric measuring the how long sessions were kept open in the previous 7 days window.
modeshape.repository.session-lifetime-previous-52-weeks = The metric measuring the how long sessions were kept open in the previous 52 weeks window.

modeshape.repository.sequencer-execution-time-previous-60-seconds = The metric measuring how long sequencers took to run and save the changes in the previous 60 seconds window.
modeshape.repository.sequencer-execution-time-previous-60-minutes = The metric measuring how long sequencers took to run and save the changes in the previous 60 minutes window.
modeshape.repository.sequencer-execution-time-previous-24-hours = The metric measuring how long sequencers took to run and save the changes in the previous 24 hours window.
modeshape.repository.sequencer-execution-time-previous-7-days = The metric measuring how long sequencers took to run and save the changes in the previous 7 days window.
modeshape.repository.sequencer-execution-time-previous-52-weeks = The metric measuring how long sequencers took to run and save the changes in the previous 52 weeks window.
