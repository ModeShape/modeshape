#
# ModeShape (http://www.modeshape.org)
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# See the AUTHORS.txt file in the distribution for a full listing of 
# individual contributors. 
#
# ModeShape is free software. Unless otherwise indicated, all code in ModeShape
# is licensed to you under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# ModeShape is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#

errorClosingConnection = Error closing SQL connection
errorObtainingConnection = Error obtaining SQL connection

sourceIsReadOnly = The JDBC Metadata source "{0}" is read-only and cannot be changed to allow updates
errorSerializingCachePolicyInSource = Error serializing a {0} instance owned by the {1} DiskSource

couldNotGetDatabaseMetadata = Could not obtain database-level metadata
couldNotGetCatalogNames = Could not obtain catalog names for database
couldNotGetSchemaNames = Could not obtain schema names for catalog "{0}"
couldNotGetTableNames = Could not get the table names for schema "{1}" in catalog "{0}"
couldNotGetTable = Could not get metadata for the table named "{2}" in schema "{1}" in catalog "{0}"
couldNotGetColumn = Could not get metadata for the column named "{3}" in the table named "{2}" in schema "{1}" in catalog "{0}"
duplicateTablesWithSameName = Multiple tables named "{2}" in catalog "{0}" and schema "{1}"
couldNotGetProcedureNames = Could not get the procedure names for schema "{1}" in catalog "{0}"
couldNotGetProcedure = Could not get metadata for the procedure named "{2}" in schema "{1}" in catalog "{0}"

repositorySourceMustHaveName = The JDBC Metadata Store repository source must have a name
errorFindingDataSourceInJndi = JDBC Metadata repository source {0} unable to find DataSource in JNDI at {1}
errorSettingContextClassLoader = Error while setting the current context class loader for JDBC Metadata repository source {0} to classloader name {1}
driverClassNameAndUrlAreRequired = Since no valid JNDI name for a data source was provided, a JDBC driver class name ({0}) and a JDBC driver URL ({1}) must both be provided
couldNotSetDriverProperties = Could not set driver properties on c3p0 data source 

defaultWorkspaceNamePropertyDescription = Optional property that defines the name for the workspace that will be used by default if none is specified. The default value is an empty string.
defaultWorkspaceNamePropertyLabel = Default Workspace Name
defaultWorkspaceNamePropertyCategory = 

dataSourceJndiNamePropertyDescription = The JNDI name of the JDBC DataSource instance that should be used. If not specified, the other driver properties must be set.
dataSourceJndiNamePropertyLabel = JNDI Name of Data Source
dataSourceJndiNamePropertyCategory = Data Source

passwordPropertyDescription = The password that should be used when creating JDBC connections using the JDBC driver class. This is not required if the DataSource is found in JNDI.
passwordPropertyLabel = Password
passwordPropertyCategory = Driver

usernamePropertyDescription = The username that should be used when creating JDBC connections using the JDBC driver class. This is not required if the DataSource is found in JNDI.
usernamePropertyLabel = Username
usernamePropertyCategory = Driver

urlPropertyDescription = The URL that should be used when creating JDBC connections using the JDBC driver class. This is not required if the DataSource is found in JNDI.
urlPropertyLabel = Database URL
urlPropertyCategory = Driver

driverClassNamePropertyDescription = The name of the JDBC driver class. This is not required if the DataSource is found in JNDI, but is required otherwise.
driverClassNamePropertyLabel = Driver Class Name
driverClassNamePropertyCategory = Driver

driverClassloaderNamePropertyDescription = The name of the class loader or classpath that should be used to load the JDBC driver class. This is not required if the DataSource is found in JNDI.
driverClassloaderNamePropertyLabel = Driver Classloader Name
driverClassloaderNamePropertyCategory = Driver

maximumConnectionsInPoolPropertyDescription = The maximum number of connections that may be in the connection pool. The default is "5". This is not required if the DataSource is found in JNDI.
maximumConnectionsInPoolPropertyLabel = Maximum Connection Pool Size
maximumConnectionsInPoolPropertyCategory = Driver

minimumConnectionsInPoolPropertyDescription = The minimum number of connections that will be kept in the connection pool. The default is "0".
minimumConnectionsInPoolPropertyLabel = Minimum Connection Pool Size
minimumConnectionsInPoolPropertyCategory = Connection Pool

maximumConnectionIdleTimeInSecondsPropertyDescription = The maximum number of seconds that a connection can remain idle in the pool before it is closed. The default is "600" seconds (or 10 minutes).
maximumConnectionIdleTimeInSecondsPropertyLabel = Maximum Connection Idle Time
maximumConnectionIdleTimeInSecondsPropertyCategory = Connection Pool

maximumSizeOfStatementCachePropertyDescription = The maximum number of statements that should be cached. Statement caching can be disabled by setting to "0". The default is "100".
maximumSizeOfStatementCachePropertyLabel = Maximum Statement Cache Size
maximumSizeOfStatementCachePropertyCategory = Connection Pool

numberOfConnectionsToAcquireAsNeededPropertyDescription = The number of connections that should be added to the pool when there are not enough to be used. The default is "1".
numberOfConnectionsToAcquireAsNeededPropertyLabel = Connection Acquisition Size
numberOfConnectionsToAcquireAsNeededPropertyCategory = Connection Pool

idleTimeInSecondsBeforeTestingConnectionsPropertyDescription = The number of seconds that a connection can remain idle before the connection should be tested to ensure it is still valid. The default is 180 seconds (or 3 minutes).
idleTimeInSecondsBeforeTestingConnectionsPropertyLabel = Idle Time Before Testing Connections
idleTimeInSecondsBeforeTestingConnectionsPropertyCategory = Connection Pool

defaultCatalogNamePropertyDescription = The name to use for the catalog name if the database does not support catalogs or the database has a catalog with the empty string as a name. The default value is "default".
defaultCatalogNamePropertyLabel = Default Catalog Name
defaultCatalogNamePropertyCategory = 

defaultSchemaNamePropertyDescription = The name to use for the schema name if the database does not support schemas or the database has a schema with the empty string as a name. The default value is "default".
defaultSchemaNamePropertyLabel = Default Schema Name
defaultSchemaNamePropertyCategory = 

metadataCollectorClassNamePropertyDescription = The name of a custom class to use for metadata collection. The class must implement the MetadataCollector interface. If a null value is specified for this property, a default MetadataCollector implementation will be used that relies on the DatabaseMetaData provided by the JDBC driver for the connection. This property is provided as a means for connecting to databases with a JDBC driver that provides a non-standard DatabaseMetaData implementation or no DatabaseMetaData implementation at all.
metadataCollectorClassNamePropertyLabel = Database URL
metadataCollectorClassNamePropertyCategory = Advanced

