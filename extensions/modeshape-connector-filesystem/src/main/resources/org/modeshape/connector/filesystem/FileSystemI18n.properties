#
# ModeShape (http://www.modeshape.org)
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# See the AUTHORS.txt file in the distribution for a full listing of 
# individual contributors. 
#
# ModeShape is free software. Unless otherwise indicated, all code in ModeShape
# is licensed to you under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# ModeShape is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#
connectorName = JPA Graph Store Connector
workspaceDoesNotExist = The workspace "{0}" does not exist
pathForWorkspaceRootDoesNotExist = The path "{0}" for the predefined workspace for the file system source "{1}" does not represent an existing directory
pathForWorkspaceRootIsNotDirectory = The path "{0}" for the predefined workspace for the file system source "{1}" is actually a path to an existing file
pathForWorkspaceRootCannotBeRead = The path "{0}" for the predefined workspace for the file system source "{1}" cannot be read
propertyIsRequired = The {0} property is required but has no value
errorSerializingCachePolicyInSource = Error serializing a {0} instance owned by the {1} DiskSource
sameNameSiblingsAreNotAllowed = The "{0}" source does not allow same-name siblings
nodeOrderingNotSupported = {0} does not support node ordering
onlyTheDefaultNamespaceIsAllowed = Repository source "{0}" requires that node names use the default namespace
sourceIsReadOnly = The source "{0}" does not allow updates.  Set the "updatesAllowed" property to "true" on the repository source (connector) to enable updates. 
pathIsReadOnly = The path "{0}" in workspace "{1}" in {2} cannot be written to.  See java.io.File\#canWrite().
couldNotCreateDirectory = Could not create the directory "{1}" for the file system source "{0}"
ancestorInPathIsFile = The parent directory "{1}" in the file system source "{0}" is a file
pathForWorkspaceIsNotDirectory = The path "{1}" for the workspace "{2}" for the file system source "{0}" is actually a path to an existing file
pathForWorkspaceCannotBeRead = The path "{1}" for the workspace "{2}" for the file system source "{0}" cannot be read

workspaceRootPathPropertyDescription = Optional property that specifies a path on the local file system to the parent folder where all workspaces are found. The workspace name will be appended to this path to determine the absolute path for a particular workspace. If no value (or a null value) is specified, the source will use the name of the workspace as a relative path from the current working directory (as defined by new File(".").\nAs an example, if a value is specified for this property, the workspace named "default/foo" will be found using 'new File(workspaceRootPath, "default/foo")'. If, however, this property is not set, then the path for that workspace will be found with 'new File(".", "default/foo")'.
workspaceRootPathPropertyLabel = Path to the Workspaces
workspaceRootPathPropertyCategory = Workspaces
defaultWorkspaceNamePropertyDescription = Optional property that defines the name for the workspace that will be used by default if none is specified. The default value is an empty string.
defaultWorkspaceNamePropertyLabel = Default Workspace Name
defaultWorkspaceNamePropertyCategory = Workspaces
predefinedWorkspaceNamesPropertyDescription = Optional property that specifies the names of the workspaces that are available at startup. The default value is an an empty array.
predefinedWorkspaceNamesPropertyLabel = Predefined Workspace Names
predefinedWorkspaceNamesPropertyCategory = Workspaces
updatesAllowedPropertyDescription = Specifies whether the content in the file system can be updated ("true"), or if the content may only be read ("false"). The default value is "false" to avoid unintentional security vulnerabilities.
updatesAllowedPropertyLabel = Allows Updates
updatesAllowedPropertyCategory = Advanced
exclusionPatternPropertyDescription = Specifies a regular expression that is used to determine which files and folders in the underlying file system should be exposed through this connector. Files and folders with a name that matches the provided regular expression will not be exposed by this source. Setting this property to null has the effect of removing the exclusion pattern.
exclusionPatternPropertyLabel = Exclusion Pattern
exclusionPatternPropertyCategory = Advanced
inclusionPatternPropertyDescription = Specifies a regular expression that is used to determine which files and folders in the underlying file system should be exposed through this connector. Files and folders with a name that matches the provided regular expression will be exposed by this source. Setting this property to null has the effect of removing the inclusion pattern.
inclusionPatternPropertyLabel = Inclusion Pattern
inclusionPatternPropertyCategory = Advanced
maxPathLengthPropertyDescription = The maximum absolute path length supported by this source and the operating system. The length of any path is calculated relative to the file system root, NOT the repository root. That is, if a workspace "bar" is mapped to the "/tmp/foo/bar" directory on the file system, then the path "/node1/node2" in the "bar" workspace has an effective length of 23 ("/tmp/foo/bar" has length 11, "/node1/node2" has length 12, so 11 + 12 = 23)./nThe default value is '255', which is the maximum path length on Microsoft Windows.
maxPathLengthPropertyLabel = Maximum Path Length
maxPathLengthPropertyCategory = Advanced
eagerFileLoadingPropertyDescription = Optional flag that defines whether the connector should delay reading file content until it is needed. A value of "false" may result in the file content being loaded into memory, while a value of "true" will directly access the file contents whenever they are needed within ModeShape. The default value is "true".
eagerFileLoadingPropertyLabel = Direct binary value
eagerFileLoadingPropertyCategory = Advanced
determineMimeTypeUsingContentPropertyDescription = Optional flag that defines whether the MIME type for 'nt:resource' nodes should be determined from the filename and the content, or just the filename. The default is to use the filename and content. 
determineMimeTypeUsingContentPropertyLabel = Determine MIME type using content
determineMimeTypeUsingContentPropertyCategory = Advanced
extraPropertiesPropertyDescription = Optional setting that specifies how to handle the extra properties on "nt:file", "nt:folder", and "nt:resource" nodes that cannot be represented on the native files themselves. Set this to "log" if warnings are to be sent to the log, or "error" if setting such properties should cause an error, or "store" if they should be stored in ancillary files next to the files and folders, or "ignore" if they should be silently ignored. The "log" value will be used by default or an invalid value is specified. This setting will be ignored if a "Extra Properties Factory Classname" value is specified.
extraPropertiesPropertyLabel = Extra Properties Behavior
extraPropertiesPropertyCategory = Advanced
customPropertiesFactoryPropertyDescription = The name of the CustomPropertiesFactory implementation that will be used to handle any extra properties on "nt:file", "nt:folder", and "nt:resource" nodes that cannot be represented on the native files themselves. Setting this will override any value set on the "Extra Properties" setting.
customPropertiesFactoryPropertyLabel = Extra Properties Factory Classname
customPropertiesFactoryPropertyCategory = Advanced

# Writable tests
parentIsReadOnly = The parent node at path "{0}" in workspace "{1}" in {2} cannot be written to.  See java.io.File\#canWrite().
unableToCreateWorkspaces = {0} does not allow creating new workspaces (request was to create "{1}")
fileAlreadyExists = The path "{0}" in workspace "{1}" in {2} already exists.
couldNotCreateFile = Error creating the path "{0}" in workspace "{1}" in {2}: {3}
cannotCreateFileAsExcludedPattern = Cannot create the file named "{0}" in workspace "{1}" because it matches the exclusion pattern
cannotRenameFileToExcludedPattern = Cannot rename the file named "{0}" to "{1}" in workspace "{2}" because it matches the exclusion pattern
unsupportedPrimaryType = Primary type "{3}" for path "{0}" in workspace "{1}" in {2} is not valid for the file system connector.  Valid primary types are nt\:file, nt\:folder, nt\:resource, and dna\:resouce. 
invalidNameForResource = Invalid node name "{3}" for node at path "{0}" in workspace "{1}" in {2}. The name of nodes with primary type nt:resource or dna:resource must be "jcr:content".
invalidPathForResource = Invalid parent type for node at path "{0}" in workspace "{1}" in {2}. The parent node for nodes with primary type nt:resource or dna:resource must be of type nt:file.
invalidPropertyNames = Attempt to set or update invalid property names: {0}
couldNotReadData = Error reading data from path "{2}" in workspace "{1}" in repository source "{0}" 
couldNotWriteData = Error writing data to path "{0}" in workspace "{1}" in {2}\: {3} 
couldNotCopyData = Error copying from "{1}" to "{2}" in repository source {0}
missingRequiredProperty = Missing required property "{3}" at path "{0}" in workspace "{1}" in {2} 
deleteFailed = Could not delete file at path "{0}" in workspace "{1}" in {2}
getCanonicalPathFailed = Could not determine canonical path
maxPathLengthExceeded = The maximum absolute path length ({0}) for source "{1}" was exceeded by the node at: {2} ({3})
couldNotStoreProperty = Unable to store "{0}" property for the file "{1}" in the "{2}" file system source. Check the "extraProperties" setting for this source.
couldNotStoreProperties = Unable to store the extra properties {0} for the file "{1}" in the "{2}" file system source. Check the "extraProperties" setting for this source.
