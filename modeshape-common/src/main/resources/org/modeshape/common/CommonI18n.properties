#
# ModeShape (http://www.modeshape.org)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Make sure the following I18n.java-related properties are defined before all other properties to ensure a valid error message is
# produced in the event of a missing/duplicate/unused property

i18nClassInterface = Internationalization class {0} must not be an interface.
i18nClassNotPublic = Internationalization {0} must be public.
i18nFieldFinal = Internationalization field "{0}" in {1} must not be final.
i18nFieldInvalidType = Internationalization field "{0}" in {1} must be of type {2}.
i18nFieldNotPublic = Internationalization field "{0}" in {1} must be public.
i18nFieldNotStatic = Internationalization field "{0}" in {1} must be static.
i18nLocalizationFileNotFound = No variant of the localization file for "{0}" could be found.
i18nLocalizationProblems = Problems were encountered while localizing internationalization {0} to locale "{1}" 
i18nPropertyDuplicate = Duplicate property values were found for property "{0}"  in localization file "{1}";
i18nPropertyMissing = Missing property "{0}" in localization file "{1}".
i18nPropertyUnused = An unused property, "{0}", was found in localization file "{1}".
i18nRequiredToSuppliedParameterMismatch = Internationalization field "{0}" in {1}: {2}
i18nBundleNotFoundInClasspath = None of the bundles "{0}" can be located in the classpath

# Core-related fields
argumentDidNotContainKey = "The {0} argument did not contain the expected key {1}
argumentDidNotContainObject = "The {0} argument did not contain the expected object {1}
argumentMayNotBeEmpty = The {0} argument may not be empty
argumentMayNotBeGreaterThan = The {0} argument value, {1}, may not be greater than {2}
argumentMayNotBeLessThan = The {0} argument value, {1}, may not be less than {2}
argumentMayNotBeNegative = The {0} argument value, {1}, may not be negative
argumentMayNotBeNull = The {0} argument may not be null
argumentMayNotBeNullOrZeroLength = The {0} argument may not be null or zero-length
argumentMayNotBeNullOrZeroLengthOrEmpty = The {0} argument may not be empty or contain only whitespace
argumentMayNotBePositive = The {0} argument value, {1}, may not be positive
argumentMayNotContainNullValue = The {0} argument may not contain a null value (first null found at position {1})
argumentMustBeEmpty = The {0} argument must be empty.
argumentMustBeEquals = The {0} argument is not equal to {1}
argumentMustBeGreaterThan = The {0} argument value, {1}, must be greater than {2}
argumentMustBeGreaterThanOrEqualTo = The {0} argument value, {1}, must be greater than or equal to {2}
argumentMustBeInstanceOf = The {0} argument was an instance of {1} but was expected to be an instance of {2}
argumentMustBeLessThan = The {0} argument value, {1}, must be less than {2}
argumentMustBeLessThanOrEqualTo = The {0} argument value, {1}, must be less than or equal to {2}
argumentMustBeNegative = The {0} argument value, {1}, must be negative
argumentMustBeNull = The {0} argument must be null
argumentMustBeNumber = The {0} argument value must be a number
argumentMustBeOfMaximumSize = The {0} argument is a {1} with {2} elements but must have no more than {3}
argumentMustBeOfMinimumSize = The {0} argument is a {1} with {2} elements but must have at least {3}
argumentMustBePositive = The {0} argument value, {1}, must be positive
argumentMustBeSameAs = The {0} argument is not the same as "{1}"
argumentMustNotBeEquals = The {0} argument is equal to {1}
argumentMustNotBeSameAs = The {0} argument is the same as "{1}"
componentClassnameNotValid = The class name {0} specified for {1} is not a valid Java class name
componentNotConfigured = The component {0} was not configured and will not be used
dateParsingFailure = Unable to parse the date "{0}" using the standard ISO 8601 format
initialActivityMonitorTaskName =
nullActivityMonitorTaskName = Not available
pathAncestorDegreeIsInvalid = Unable to obtain the {1} ancestor for {0}
pathCannotBeNormalized = The path {0} is invalid and cannot be normalized
pathIsAlreadyAbsolute = The path {0} is already an absolute path
pathIsNotAbsolute = The path {0} is not an absolute path
pathIsNotRelative = The path {0} is not a relative path
requiredToSuppliedParameterMismatch = {0} parameter{1} supplied, but {2} parameter{3} required: "{4}" => "{5}"
unableToAccessResourceFileFromClassLoader = Unable to access "{0}" resource from the class loader

noMoreContent = No more content.
noMoreContentButWasExpectingToken = No more content, but was expecting "{0}"
unexpectedToken = Expecting "{0}" but found "{1}" at line {2}, column {3}: {4}
noMoreContentButWasExpectingCharacter = No more content, but was expecting '{0}'
unexpectedCharacter = Expecting '{0}' but found '{1}' at line {2}, column {3}: {4}
noMoreContentButWasExpectingTokenType = No more content, but was expecting {0} token
unexpectedTokenType = Expecting {0} token but found {1} at line {2}, column {3}: {4}
startMethodMustBeCalledBeforeNext = The 'start()' method must be called before 'hasNext()'
startMethodMustBeCalledBeforeConsumingOrMatching = The 'start()' method must be called before tokens can be consumed or matched
noMatchingDoubleQuoteFound = No matching closing double quote found for the one at line {0}, column {1}
noMatchingSingleQuoteFound = No matching closing single quote found for the one at line {0}, column {1}
expectingValidIntegerAtLineAndColumn = Expecting a valid integer value but found '{0}' at line {1}, column {2}
expectingValidLongAtLineAndColumn = Expecting a valid long value but found '{0}' at line {1}, column {2}
expectingValidBooleanAtLineAndColumn = Expecting a valid boolean value but found '{0}' at line {1}, column {2}
endPositionMustBeGreaterThanStartingPosition = End position {1} must be greater than starting position {0}

componentConfigNamePropertyDescription = The name of this component
componentConfigNamePropertyLabel = Name
componentConfigNamePropertyCategory = 
componentConfigDescriptionPropertyDescription = The description of this component
componentConfigDescriptionPropertyLabel = Description
componentConfigDescriptionPropertyCategory = 
componentConfigClassnamePropertyDescription = The name of the Java class that is to be used
componentConfigClassnamePropertyLabel = Class Name
componentConfigClassnamePropertyCategory = 
componentConfigClasspathPropertyDescription = The names of the classpaths upon which the component's class is found
componentConfigClasspathPropertyLabel = Classpath names
componentConfigClasspathPropertyCategory =

errorInitializingCustomLoggerFactory = Error loading and/or instantiating the '{0}' implementation, which is used to tie ModeShape into a custom logging framework (other than SLF4J, Log4J or the JDK Logging).
customLoggingAvailable = '{0}' located in the classpath. It will be used by ModeShape for logging.
slf4jAvailable = SLF4J implementation located in the classpath. It will be used by ModeShape for logging.
log4jAvailable = Log4j located in the classpath. It will be used by ModeShape for logging.
jdkFallback = No custom logger, SLF4J implementation or Log4j located in the classpath. ModeShape will use the JDK logger for logging.
