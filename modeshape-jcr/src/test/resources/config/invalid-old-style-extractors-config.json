{
    "name" : "Thorough",
    "transactionMode" : "auto",
    "monitoring" : {
        "enabled" : true,
    },
    "workspaces" : {
        "predefined" : ["otherWorkspace"],
        "default" : "default",
        "allowCreation" : true,
    },
    "storage" : {
        "cacheName" : "Thorough",
        "cacheConfiguration" : "infinispan_configuration.xml",
        "transactionManagerLookup" = "org.infinispan.transaction.lookup.GenericTransactionManagerLookup",
        "binaryStorage" : {
            "type" : "file",
            "directory" : "Thorough/binaries",
            "minimumBinarySizeInBytes" : 4096
        }
    },
    "security" : {
        "anonymous" : {
            "username" : "<anonymous>",
            "roles" : ["readonly","readwrite","admin"],
            "useOnFailedLogin" : false
        },
        "providers" : [
            {
                "name" : "My Custom Security Provider",
                "classname" : "com.example.MyAuthenticationProvider",
            },
            {
                "classname" : "jaas",
                "policyName" : "modeshape-jcr",
            }
        ]
    },
    "query" : {
        "enabled" : true,
        "rebuildUponStartup" : "if_missing",
        "extractors" : [
            {
                "name" : "MyFileType extractor",
                "classname" : "com.example.myfile.MyExtractor",
            },
            {
                "name" : "General content-based extractor",
                "classname" : "tika",
            }
        ],
        "indexStorage" : {
            "type" : "filesystem",
            "location" : "Thorough/indexes",
            "lockingStrategy" : "native",
            "fileSystemAccessType" : "auto"
        },
        "indexing" : {
            "threadPool" : "modeshape-workers",
            "analyzer" : "org.apache.lucene.analysis.standard.StandardAnalyzer",
            "similarity" : "org.apache.lucene.search.DefaultSimilarity",
            "batchSize" : -1,
            "indexFormat" : "LUCENE_35",
            "readerStrategy" : "shared",
            "mode" : "sync",
            "systemContentMode" : "async",
            "asyncThreadPoolSize" : 1,
            "asyncMaxQueueSize" : 0,
            "backend" : {
                "type" : "lucene",
                
            },
            "hibernate.search.custom.overridden.property" : "value",
        }
    },
    "sequencing" : {
        "description" : "Define several sequencers to automatically analyze and extract structured content from files uploaded to the repository. If a file is updated, the content previously derived by the sequencer(s) will be removed before the newly-derived content is stored. Since sequencing is done asynchronously, specify that threads from the 'modeshape-workers' thread poool be used.",
        "removeDerivedContentWithOriginal" : true,
        "threadPool" : "modeshape-workers",
        "sequencers" : {
        "zipSequencer" : {
            "classname" : "ZipSequencer",
            "pathExpressions" : ["default:/files(//)(*.zip[*])/jcr:content[@jcr:data] => default:/sequenced/zip/$1"],
            },
        "delimitedTextSequencer" : {
            "description" : "Extracts row and column information from CSV files uploaded under '/files', and stores the derived information under '/sequenced/text/delimited/...'. The ',' character should be used to delimit the different values in a row.",
            "classname" : "org.modeshape.sequencer.text.DelimitedTextSequencer",
            "pathExpressions" : [
                "default:/files//(*.csv[*])/jcr:content[@jcr:data] => default:/sequenced/text/delimited/$1"
            ],
        "splitPattern" : ","
        }
    }
    },
    "clustering" : {
    }
}