#
# ModeShape (http://www.modeshape.org)
# See the COPYRIGHT.txt file distributed with this work for information
# regarding copyright ownership.  Some portions may be licensed
# to Red Hat, Inc. under one or more contributor license agreements.
# See the AUTHORS.txt file in the distribution for a full listing of 
# individual contributors. 
#
# ModeShape is free software. Unless otherwise indicated, all code in ModeShape
# is licensed to you under the terms of the GNU Lesser General Public License as
# published by the Free Software Foundation; either version 2.1 of
# the License, or (at your option) any later version.
#
# ModeShape is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this software; if not, write to the Free
# Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA, or see the FSF site: http://www.fsf.org.
#

engineStarting = JcrEngine starting...
engineStarted = JcrEngine started in {0} ms
couldNotStartEngine = Could not start the JcrEngine
engineStopping = JcrEngine stopping...
engineStopped = JcrEngine stopped in {0} ms
repositoryReferencesNonExistantSource = The '{0}' repository references the '{1}' repository source that does not exist
indexRebuildingStarted = Started rebuilding indexes for repository '{0}'
indexRebuildingComplete = Completed rebuilding indexes for repository '{0}'
indexRebuildingOfWorkspaceStarted = Started rebuilding indexes for workspace '{1}' in repository '{0}'
indexRebuildingOfWorkspaceComplete = Completed rebuilding indexes for workspace '{1}' in repository '{0}'

cannotConvertValue = Cannot convert {0} value to {1}
loginFailed = Unable to create session for workspace {1} in repository {0}: authentication failed. Check credentials.
noPrivilegeToGetLoginContextFromCredentials = No privilege to get LoginContext from the supplied credentials class '{0}'. Check security privileges for classes.
credentialsMustProvideJaasMethod = The Credentials class "{0}" must implement "public LoginContext getLoginContext();", be an instance of "javax.jcr.SimpleCredentials", or be an instance of "org.modeshape.jcr.SecurityContextCredentials"
mustBeInPrivilegedAction=Expected 'login' method on '{0}' repository and '{1}' workspace to be called within a java.security.PrivilegedAction (when using {2})
loginConfigNotFound = The JAAS policy named '{0}' (nor the policy named 'other') could not be found; check the value of the '{1}' repository option in the configuration for the '{2}' repository (or ignore this message if JAAS authentication is not being used)
credentialsMustReturnLoginContext = The "getLoginContext()" method in Credentials class "{0}" may not return null
usingAnonymousUser = Invalid credentials provided.  Using anonymous user context.
unknownCredentialsImplementation = ModeShape does not know how to use the "{0}" implementation of javax.jcr.Credentials
defaultWorkspaceName=
pathNotFound = No item exists at path {0} in workspace "{1}"
pathNotFoundRelativeTo = No item exists at path {0} relative to {1} in workspace "{2}"
pathCannotHaveSameNameSiblingIndex = The path specified by the argument "{0}" cannot have a same-name-sibling index
permissionDenied = Permission denied to perform actions "{1}" on path {0}
repositoryMustBeConfigured = ModeShape repositories must be configured with either a repository source factory or a repository source
sourceInUse = All sessions must end before a new repository source can be set
repositoryDoesNotExist = There is no repository named "{0}"
fileDoesNotExist = Unable to find or read the file "{0}"
failedToReadPropertiesFromManifest = Error reading manifest properties: {0}
failedToReadPropertyFromManifest = "{0}" property not found in manifest
errorLoadingNodeTypeDefintions = Error loading CND file "{0}": {1}
errorStartingRepositoryCheckConfiguration = Error starting the "{0}" repository (check the configuration): {1}
startingAllRepositoriesWasInterrupted = The engine was interrupted while starting each repository, and will be left in an unknown state: {0}
completedStartingRepository = Completed starting the "{0}" repository
registeringNodeTypesDefinedInConfiguration = Registering the node types defined in the configuration for the "{0}" repository
completedRegisteringNodeTypesDefinedInConfiguration Completed registering the node types defined in the configuration for the "{0}" repository
unableToFindNodeTypeDefinitionsOnClasspathOrFileOrUrl = Unable to find the node type definition file "{0}" on the classpath, as a relative or absolute file, or resolve as a URL
unableToFindResourceOnClasspathOrFileOrUrl = Unable to find "{0}" on the classpath, as a relative or absolute file, or resolve as a URL
unableToImportInitialContent = Unable to import initial content for repository "{0}" from "{1}". Check that this file exists on the file system or classpath.
fileMustExistAndBeReadable = The file at "{0}" must exist and be readable
invalidJcrUrl = A valid JCR URL must be provided to use this method.  "{0}" is not a valid JCR URL.  Please consult the ModeShape Reference Guide for information on providing a valid JCR URL.
unableToInitializeAuthenticationProvider = Unable to initialize authentication provider "{0}" for repository "{1}": {2}

rootNodeHasNoParent = The root node has no parent node
rootNodeIsNotProperty = The root path "/" refers to the root node, not a property
childNodeAlreadyExists = A child node named "{0}" already exists at node "{1}"

noNamespaceWithPrefix = There is no namespace with prefix "{0}"
noNamespaceWithUri = There is no namespace with URI "{0}"
unableToChangeTheDefaultNamespace = The default namespace is reserved and cannot be changed
unableToRegisterReservedNamespacePrefix = Unable to register the namespace "{1}" with prefix "{0}" because this prefix is reserved
unableToRegisterReservedNamespaceUri = Unable to register the namespace "{1}" with prefix "{0}" because this URI is reserved
unableToRegisterNamespaceUsingXmlPrefix = Unable to register the namespace "{1}" with prefix "{0}" because prefixes starting with 'xml' (in any case) are reserved
unableToRegisterNamespaceWithInvalidPrefix = Unable to register the namespace "{1}" with prefix "{0}" because the prefix must be a valid XML NCName
errorRegisteringPersistentNamespace = Error registering the persisted namespace "{1}" with prefix "{0}"
unableToUnregisterReservedNamespacePrefix = Unable to unregister the namespace "{1}" with prefix "{0}" because this prefix is reserved
unableToUnregisterReservedNamespaceUri = Unable to unregister the namespace "{1}" with prefix "{0}" because this URI is reserved
unableToUnregisterPrefixForNamespaceThatIsNotRegistered = The namespace with prefix "{0}" is not registered and cannot be unregistered

errorCleaningUpLocks = Error while cleaning up locks for JCR repository "{0}"
cleaningUpLocks = Lock clean up process begun
cleanedUpLocks = Lock clean up process completed
errorWhileInitializingTheNamespaceRegistry = Error while initializing the namespace registry for workspace "{0}"
invalidRelativePath = "{0}" is not a valid relative path
invalidAbsolutePath = "{0}" is not a valid absolute path
invalidPathParameter = The "{1}" parameter value "{0}" was not a valid path
invalidNamePattern = The "{1}" name pattern contained the '{0}' character, which is not allowed in a name pattern
invalidNodeTypeNameParameter = The "{1}" parameter value "{0}" was not a valid node type name
noPrimaryItemNameDefinedOnPrimaryType = The primary type "{0}" for node "{1}" in workspace "{2}" does not define a primary item name
primaryItemNameForPrimaryTypeIsNotValid = The primary type "{0}" for node "{2}" in workspace "{3}" defines an invalid primary item name ("{1}")
primaryItemDoesNotExist = The node "{2}" in workspace "{3}" does not have an item named "{1}" as defined by its primary type "{0}"
itemNotFoundWithUuid = An item with UUID "{0}" could not be found in workspace "{1}": {2}
itemAlreadyExistsWithUuid = An item with UUID "{0}" already exists in workspace "{1}" at "{2}"
itemNotFoundAtPath = An item at "{0}" could not be found in workspace "{1}"
itemNotFoundAtPathRelativeToReferenceNode = An item at "{0}" relative to "{1}" could not be found in workspace "{2}"
identifierPathContainedUnsupportedIdentifierFormat = The identifier path "{0}" does not contain a known identifier format
identifierPathNeverReferencesProperty = Identifier paths such as "{0}" only point to nodes, and never to properties
propertyNotFoundOnNode = Property "{0}" does not exist on node "{1}" in workspace "{2}"
propertyNotFoundAtPathRelativeToReferenceNode = A property at "{0}" relative to "{1}" could not be found in workspace "{2}"
nodeNotFoundAtPathRelativeToReferenceNode = A node at "{0}" relative to "{1}" could not be found in workspace "{2}"
childNotFoundUnderNode = The child "{0}" could not be found under "{1}" in workspace "{2}"
errorWhileFindingNodeWithUuid = Error while finding the node with UUID "{0}" in workspace "{1}": {2}
errorWhileFindingNodeWithPath = Error while finding the node "{0}" in workspace "{1}"
nodeDefinitionCouldNotBeDeterminedForNode = Unable to determine a valid node definition for the node "{0}" in workspace "{1}" of "{2}"
noSnsDefinitionForNode = A node definition that allows same name siblings could not be found for the node "{0}" in workspace "{1}"
missingNodeTypeForExistingNode = Missing primary node type "{0}" for node {1} in workspace "{2}" of "{3}"
unableToCreateNodeWithInternalPrimaryType = Unable to create node at "{1}" in workspace "{2}" because the node type "{0}" is reserved for used by ModeShape
unableToCreateNodeWithPrimaryTypeThatDoesNotExist = Unable to create child "{1}" in workspace "{2}" because the node type "{0}" does not exist
unableToCreateNodeWithNoDefaultPrimaryTypeOnChildNodeDefinition = Unable to create child "{2}" in workspace "{3}" because the node definition "{0}" on the "{1}" node type has no default primary type 
unableToSaveNodeThatWasCreatedSincePreviousSave = Unable to save node "{0}" in workspace "{1}" because it was created since the last save
unableToSetMultiValuedPropertyUsingSingleValue = Unable to set existing multi-valued property "{0}" on node "{1}" in workspace "{2}" using single-value setter methods
unableToSetSingleValuedPropertyUsingMultipleValues = Unable to set existing single-valued property "{0}" on node "{1}" in workspace "{2}" using multi-value setter methods
invalidMethodForSingleValuedProperty = This method cannot be called on a property with a single value
invalidMethodForMultiValuedProperty = This method cannot be called on a property with multiple values
unableToRefreshBranchBecauseChangesDependOnChangesToNodesOutsideOfBranch = Unable to refresh "{0}" in workspace "{1}" because it contains changes that depend on changes to nodes outside of this branch
unableToSaveBranchBecauseChangesDependOnChangesToNodesOutsideOfBranch = Unable to save "{0}" in workspace "{1}" because it contains changes that depend on changes to nodes outside of this branch
allPropertyValuesMustHaveSameType = All values of property "{0}" on node "{3}" in workspace "{4}" must all be {2} values (values were: {1})
cannotRemoveNodeFromClone = The node at "{0}" with UUID "{1}" exists in the current workspace but cannot be removed because it is a mandatory child node
cannotRemoveNodeFromCloneDueToChangesInSession = The node at "{0}" with UUID "{1}" already exists in the current workspace and would be removed by the clone, but that node has been changed within this session and therefore cannot be removed
constraintViolatedOnReference = The property "{0}" on node "{1}" does not satisfy the constraints defined on the "{2}" property definition
unableToBindToJndi = Unable to bind repository to JNDI location {0}
invalidOptionProvided = The provided option {0} is not a valid ModeShape option, it will be ignored
noOptionValueProvided = No value provided for option {0}, it will be ignored
valueMayNotContainNull = The value for the '{0}' property is invalid because the javax.jcr.Value object contains a null reference. To remove the value, a null javax.jcr.Value reference may be used.

cannotRemoveRootNode = Unable to remove the root node
cannotRemoveParentNodeOfTarget = The node at "{0}" with UUID "{1}" is a parent of the target node for this operation "{2}"
invalidPropertyType = Invalid property type: {0}
 

unableToRemoveRootNode = Unable to remove the root node in workspace "{0}"
unableToMoveNodeToBeChildOfDecendent = Node "{0}" in workspace "{2}" cannot be moved under a decendant node ("{1}") 
nodeHasAlreadyBeenRemovedFromThisSession = Node "{0}" in workspace "{1} has already been removed from this session

SPEC_NAME_DESC = Content Repository for Java Technology API

errorObtainingWorkspaceNames = Error while obtaining the workspace names for the "{0}" repository: {1}
errorObtainingDefaultWorkspaceName = Error while obtaining the default workspace names for the "{0}" repository: {1}
workspaceNameIsInvalid = "{1}" is not a valid workspace name for the "{0}" repository
errorVerifyingWorkspaceName =Error validating the workspace name "{1}" for the "{0}" repository\: {2}

typeNotFound=No type exists with name "{0}"
supertypeNotFound=Could not find type "{0}" which is a required supertype of type "{1}"
errorImportingNodeTypeContent = Error importing node types from "{0}": {1}
nodeTypesNotFoundInXml = No valid node types elements found in the XML in "{0}"

failedToQueryForDerivedContent = Error while querying for content in workspace "{0}" derived from (re)moved paths, using this query: {1}

systemSourceNameOptionValueDoesNotReferenceExistingSource = The JCR Repository 'SYSTEM_SOURCE_NAME' option value "{0}" references an invalid or non-existant source "{1}"
systemSourceNameOptionValueDoesNotReferenceValidWorkspace = The JCR Repository 'SYSTEM_SOURCE_NAME' option value "{0}" references an invalid or non-existant workspace in the "{1}" source
systemSourceNameOptionValueIsNotFormattedCorrectly = The JCR Repository 'SYSTEM_SOURCE_NAME' option value "{0}" is invalid or improperly formatted

searchIndexDirectoryOptionSpecifiesFileNotDirectory = The JCR Repository '{1}' option value "{0}" specifies an existing file on the local file system, but a directory is required
searchIndexDirectoryOptionSpecifiesDirectoryThatCannotBeRead = The JCR Repository '{1}' option value "{0}" specifies a directory on the local file system that cannot be read
searchIndexDirectoryOptionSpecifiesDirectoryThatCannotBeWrittenTo = The JCR Repository '{1}' option value "{0}" specifies a directory on the local file system that cannot be written
searchIndexDirectoryOptionSpecifiesDirectoryThatCannotBeCreated = The JCR Repository '{1}' option value "{0}" specifies a non-existant directory on the local file system that cannot be created
errorUpdatingQueryIndexes = Error updating the query indexes: {0}

typeMissingWhenRegisteringEngineInJndi = JNDI registration of engine at "{0}": the 'type' parameter should be specified with a value of '{1}'
repositoryNameProvidedWhenRegisteringEngineInJndi = JNDI registration of engine at "{0}": a 'repositoryName' parameter with value "{1}" will be ignored because the 'type' parameter says to register an object of type "{2}"
repositoryNameNotProvidedWhenRegisteringRepositoryInJndi = JNDI registration failed: unable to register in JNDI a repository at "{0}" because a 'repositoryName' parameter was not provided
invalidRepositoryNameWhenRegisteringRepositoryInJndi = JNDI registration failed: unable to register in JNDI a repository at "{0}" because the 'repositoryName' parameter with value "{1}" does not match the known repositories: {2}
emptyRepositoryNameProvidedWhenRegisteringRepositoryInJndi = JNDI registration failed: unable to register in JNDI a repository at "{0}" because the 'repositoryName' parameter was empty or contained only whitespace

noNegativeDepth=Depth parameter ({0}) cannot be negative
tooDeep=Depth parameter ({0}) cannot be greater than the result of getDepth() for this node

notStoredQuery=This query has not been stored or loaded
invalidQueryLanguage="{0}" is not a valid query langauge.  Supported languages are\: {1}
queryCannotBeParsedUsingLanguage=The {0} query "{1}" is not well-formed: {2}
queryInLanguageIsNotValid=The {0} query "{1}" has one or more errors: {2}
queryIsDisabledInRepository = The {0} repository does not have queries enabled
queryResultsDoNotIncludeScore = The query does not include the score in the results: {0}
queryResultsDoNotIncludeColumn = The column '{0}' does not appear in the results for query: {1}
selectorNotUsedInQuery = The selector '{0}' was not used in the query: {1}
selectorUsedInEquiJoinCriteriaDoesNotExistInQuery = The selector '{0}' used in the equijoin criteria (at line {1} and column {2}) does not exist in the query
multipleSelectorsAppearInQueryRequireSpecifyingSelectorName = Selector name must be specified when the query contains multiple selectors: {0}
equiJoinWithOneJcrPathPseudoColumnIsInvalid = Equi-join condition using one 'jcr:path' column is not valid: expected "... [{0}].[jcr:path] = [{1}].[jcr:path] ..."

invalidNodeTypeName=Node types cannot have a null or empty name
badNodeTypeName={0} cannot have a null or invalid name
noSuchNodeType=Type named '{0}' does not exist
nodeTypeAlreadyExists=Node type '{0}' already exists
invalidPrimaryTypeName=Required primary type '{0}' in type '{1}' does not exist
invalidSupertypeName=Supertype '{0}' from type '{1}' does not exist
supertypesConflict=Types '{0}' and '{1}' cannot both be supertypes of the same type, as both separately declare {2} '{3}'
ambiguousPrimaryItemName=Primary item name '{0}' matches the name of a child node and a property
invalidPrimaryItemName=Primary item name '{0}' does not match the name of any child nodes or properties
autocreatedNodesNeedDefaults=Autocreated child node '{0}' must specify a default primary type
residualDefinitionsCannotBeMandatory=Residual {0} cannot be mandatory
cannotOverrideProtectedDefinition=Cannot override protected {1} definition from '{0}'
cannotMakeMandatoryDefinitionOptional=Cannot override mandatory {1} definition from '{0}' with a non-mandatory definition.
constraintsChangedInSubtype=Must use exact same constraints when overriding the property definition for {0} from type '{1}'
cannotRedefineProperty=Cannot redefine property '{0}' with new type '{1}' when existing property with same name in type '{2}' has incompatible type '{3}'
autocreatedPropertyNeedsDefault=Auto-created property '{0}' in type '{1}' must specify a default value
singleValuedPropertyNeedsSingleValuedDefault=Single-valued property '{0}' in type '{1}' cannot have multiple default values
couldNotFindDefinitionOfRequiredPrimaryType = Could not find node type definition for the type of required primary type "{0}" while validating child node definition "{1}" of node type "{2}"
cannotRedefineChildNodeWithIncompatibleDefinition = Cannot redefine child node "{0}" with required type "{1}" in node type "{2}" with new child node that does not require that type or a subtype of that type.
cannotRemoveItemWithProtectedDefinition = Cannot remove the item at '{0}' with a protected definition

noDefinition=Cannot find a definition for the {0} named '{1}' on the node at '{2}' with primary type '{3}' and mixin types: {4}
noSnsDefinition=Cannot find a definition that allows same-name siblings for the child node named '{0}' on the node at '{1}' with primary type '{2}' and mixin types: {3} and a child node already exists with this name
missingMandatoryItem=The mandatory {0} named '{1}' defined in type '{2}' is missing from the node at '{3}'
valueViolatesConstraintsOnDefinition=The '{0}' property value '{1}' on node '{2}' does not satisfy the constraints of the '{3}' property definition on the '{4}' node type, and no other property definition is valid.
valuesViolateConstraintsOnDefinition=One or more of the '{0}' property values {1} on node '{2}' does not satisfy the constraints of the '{3}' property definition on the '{4}' node type, and no other property definition is valid.
referenceValueViolatesConstraintsOnDefinition=The '{0}' REFERENCE property value '{1}' on node '{2}' does not satisfy the constraints of the '{3}' property definition on the '{4}' node type, and no other property definition is valid.
referenceValuesViolateConstraintsOnDefinition=One or more of the '{0}' REFERENCE property values {1} on node '{2}' does not satisfy the constraints of the '{3}' property definition on the '{4}' node type, and no other property definition is valid.
weakReferenceValueViolatesConstraintsOnDefinition=The '{0}' WEAKREFERENCE property value '{1}' on node '{2}' does not satisfy the constraints of the '{3}' property definition on the '{4}' node type, and no other property definition is valid.
weakReferenceValuesViolateConstraintsOnDefinition=One or more of the '{0}' WEAKREFERENCE property values {1} on node '{2}' does not satisfy the constraints of the '{3}' property definition on the '{4}' node type, and no other property definition is valid.

allNodeTypeTemplatesMustComeFromSameSession=All node type templates must be created from the same javax.jcr.Session

nodeNotReferenceable=Only referenceable nodes may be the value of reference properties
nodeNotReferenceableUuid = Only referenceable nodes have a public UUID assigned
noPendingChangesAllowed=This operation cannot be performed when the session has pending changes
noPendingChangesAllowedForNode=This operation cannot be performed when the node has pending changes

cannotUnregisterSupertype=Cannot unregister type '{0}' which is supertype of type '{1}'
cannotUnregisterRequiredPrimaryType=Cannot unregister type '{0}' which is the required primary type for child node '{2}' on type '{1}'
cannotUnregisterDefaultPrimaryType=Cannot unregister type '{0}' which is the default primary type for child node '{2}' of type '{1}'
cannotUnregisterInUseType=Cannot unregister type '{0}' because it is currently being used on at least one node

cannotAddMixin = This node does not allow adding the mixin type "{0}"
invalidMixinTypeForNode = "{0}" is not currently a mixin type for node "{1}"
notOrderable = The primary type "{0}" for this node (at "{1}") does not have orderable children
cannotUseMixinTypeAsPrimaryType = This operation requires a primary type, but "{0}" is a mixin type
primaryTypeCannotBeAbstract = The prrimary type of a node cannot be abstract, like "{0}"
setPrimaryTypeNotSupported = ModeShape does not currently allow modifying the primary type of a node

errorReadingNodeTypesFromRemote = Node types changed due to remote update. Node types are likely to be different across nodes in the cluster.  Encountered following errors reading node types from graph: {0}
problemReadingNodeTypesFromRemote = Node types changed due to remote update. Encountered following problems reading node types from graph: {0}
errorSynchronizingNodeTypes = Node types changed due to remote update.  Could not rebuild node type map.  Node types are likely to be different across nodes in the cluster.

errorRefreshingNodeTypesFromSystem = Encountered the following error(s) while reading the node types from the system content: {0}
problemRefreshingNodeTypesFromSystem = Encountered following problems reading node types from system content: {0}
errorRefreshingNodeTypes = Node types were read from the system content, and appear to be inconsistent or invalid: {0}

errorsParsingNodeTypeDefinitions = Reading the node definitions from '{0}' resulted in problems(s): {1}
errorsParsingStreamOfNodeTypeDefinitions = Reading the node definitions from the supplied stream resulted in problems(s): {0}
warningsParsingNodeTypeDefinitions = Reading the node definitions from '{0}' resulted in warnings(s): {1}
warningsParsingStreamOfNodeTypeDefinitions = Reading the node definitions from the supplied stream resulted in warnings(s): {0}

# Lock messages
nodeNotLockable = The node at '{0}' is not lockable.  Add the 'mix:lockable' mixin type to make it lockable.
cannotRemoveLockToken = The lock token '{0}' is a session-scoped lock
alreadyLocked = The node at location '{0}' is already locked
parentAlreadyLocked = The node at location '{0}' cannot be locked because the parent node at location '{1}' is already locked
notLocked = The node at location '{0}' is not locked
lockTokenNotHeld = The node at location '{0}' is locked and this session does not hold its lock token
invalidLockToken = The lock token '{0}' is not valid
lockTokenAlreadyHeld = The lock token '{0}' is already held by another session.  It must be removed from that session before it can be added to another session.
uuidRequiredForLock = Only referenceable nodes can be locked.  The node at location '(0}' is not referenceable.

# JcrObservationManager messages
cannotCreateUuid = Factory was unable to create UUID from text '{0}'
cannotPerformNodeTypeCheck = Error checking primary type '{0}' with mixins of '{1}' against type names of '{2}'
sessionIsNotActive = The session with an ID of '{0}' has been closed and can no longer be used. 

# Versioning messages
nodeIsCheckedIn = '{0}' (or its nearest versionable ancestor) is checked in, preventing this action
cannotCreateChildOnCheckedInNodeSinceOpvOfChildDefinitionIsNotIgnore = Cannot add the child node named '{0}' under '{1}' because it is checked in and the child's node definition '{2}' has an on-parent-version attribute of '{3}' (must be 'ignore' to add child to checked-in parent)
cannotRemoveChildOnCheckedInNodeSinceOpvOfChildDefinitionIsNotIgnore = Cannot remove the child at '{0}' because the parent node is checked in and the child's node definition '{1}' has an on-parent-version attribute of '{2}' (must be 'ignore' to remove child from checked-in parent)
cannotRemoveFromProtectedNode = Mixins cannot be removed from the node at '{0}' because it has a protected node definition
cannotRemoveVersion = This version cannot be removed as the property at '{0}' still references it.  Remove that reference and try again.
pendingMergeConflicts = The node at '{0}' cannot be checked in due to existing merge conflicts stored in the 'jcr:mergeFailed property.
invalidVersion = The version at '{0}' is not valid for the version history at '{1}'
invalidVersionLabel = The version label '{0}' does not exist in the version history at '{1}'
invalidVersionName = The version name '{0}' does not exist in the version history at '{1}'
versionLabelAlreadyExists = The version label '{0}' is already in use in this version history
requiresVersionable = This operation requires that the node be versionable (that is, isNodeType("mix:versionable") == true)
cannotRestoreRootVersion = The versionable node at '{0}' cannot be restored to its root version
cannotCheckinNodeWithAbortProperty = The property '{0}' on the node at '{1}' has an onParentVersionAction of ABORT, preventing checkin
cannotCheckinNodeWithAbortChildNode = The child node '{0}' on the node at '{1}' has an onParentVersionAction of ABORT, preventing checkin
noExistingVersionForRestore = Workspace.restore(...) requires that at least one of the provided versions represents an existing node in the workspace
versionNotInMergeFailed = The version '{0}' is not present in the jcr:mergeFailed property for the node at '{1}'
unrootedVersionsInRestore = The restore operation failed because no node exists in the target workspace for the following versions: {0}
errorDuringCheckinNode = Error while performing checkin on '{0}' : {1}