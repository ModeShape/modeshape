<?xml version="1.0" ?>

<server xmlns="urn:jboss:domain:3.0">
    <extensions>
        <extension module="org.jboss.as.clustering.infinispan"/>
        <extension module="org.jboss.as.connector"/>
        <extension module="org.jboss.as.deployment-scanner"/>
        <extension module="org.jboss.as.ee"/>
        <extension module="org.jboss.as.ejb3"/>
        <extension module="org.jboss.as.jaxrs"/>
        <extension module="org.jboss.as.jdr"/>
        <extension module="org.jboss.as.jmx"/>
        <extension module="org.jboss.as.jpa"/>
        <extension module="org.jboss.as.jsf"/>
        <extension module="org.jboss.as.logging"/>
        <extension module="org.jboss.as.mail"/>
        <extension module="org.jboss.as.naming"/>
        <extension module="org.jboss.as.pojo"/>
        <extension module="org.jboss.as.remoting"/>
        <extension module="org.jboss.as.sar"/>
        <extension module="org.jboss.as.security"/>
        <extension module="org.jboss.as.transactions"/>
        <extension module="org.jboss.as.webservices"/>
        <extension module="org.jboss.as.weld"/>
        <extension module="org.wildfly.extension.batch"/>
        <extension module="org.wildfly.extension.bean-validation"/>
        <extension module="org.wildfly.extension.io"/>
        <extension module="org.wildfly.extension.request-controller"/>
        <extension module="org.wildfly.extension.security.manager"/>
        <extension module="org.wildfly.extension.undertow"/>
        <extension module="org.modeshape"/>
    </extensions>
    <management>
        <security-realms>
            <security-realm name="ManagementRealm">
                <authentication>
                    <local default-user="$local" skip-group-loading="true"/>
                    <properties path="mgmt-users.properties" relative-to="jboss.server.config.dir"/>
                </authentication>
                <authorization map-groups-to-roles="false">
                    <properties path="mgmt-groups.properties" relative-to="jboss.server.config.dir"/>
                </authorization>
            </security-realm>
            <security-realm name="ApplicationRealm">
                <authentication>
                    <local default-user="$local" allowed-users="*" skip-group-loading="true"/>
                    <properties path="application-users.properties" relative-to="jboss.server.config.dir"/>
                </authentication>
                <authorization>
                    <properties path="application-roles.properties" relative-to="jboss.server.config.dir"/>
                </authorization>
            </security-realm>
        </security-realms>
        <audit-log>
            <formatters>
                <json-formatter name="json-formatter"/>
            </formatters>
            <handlers>
                <file-handler name="file" formatter="json-formatter" relative-to="jboss.server.data.dir" path="audit-log.log"/>
            </handlers>
            <logger log-boot="true" log-read-only="false" enabled="false">
                <handlers>
                    <handler name="file"/>
                </handlers>
            </logger>
        </audit-log>
        <management-interfaces>
            <http-interface security-realm="ManagementRealm" http-upgrade-enabled="true">
                <socket-binding http="management-http"/>
            </http-interface>
        </management-interfaces>
        <access-control provider="simple">
            <role-mapping>
                <role name="SuperUser">
                    <include>
                        <user name="$local"/>
                    </include>
                </role>
            </role-mapping>
        </access-control>
    </management>
    <profile>
        <subsystem xmlns="urn:jboss:domain:logging:3.0">
            <console-handler name="CONSOLE">
                <level name="INFO"/>
                <formatter>
                    <named-formatter name="COLOR-PATTERN"/>
                </formatter>
            </console-handler>
            <periodic-rotating-file-handler name="FILE" autoflush="true">
                <formatter>
                    <named-formatter name="PATTERN"/>
                </formatter>
                <file relative-to="jboss.server.log.dir" path="server.log"/>
                <suffix value=".yyyy-MM-dd"/>
                <append value="true"/>
            </periodic-rotating-file-handler>
            <logger category="com.arjuna">
                <level name="WARN"/>
            </logger>
            <logger category="org.apache.tomcat.util.modeler">
                <level name="WARN"/>
            </logger>
            <logger category="org.jboss.as.config">
                <level name="DEBUG"/>
            </logger>
            <logger category="sun.rmi">
                <level name="WARN"/>
            </logger>
            <logger category="jacorb">
                <level name="WARN"/>
            </logger>
            <logger category="jacorb.config">
                <level name="ERROR"/>
            </logger>
            <root-logger>
                <level name="INFO"/>
                <handlers>
                    <handler name="CONSOLE"/>
                    <handler name="FILE"/>
                </handlers>
            </root-logger>
            <formatter name="PATTERN">
                <pattern-formatter pattern="%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
            </formatter>
            <formatter name="COLOR-PATTERN">
                <pattern-formatter pattern="%K{level}%d{HH:mm:ss,SSS} %-5p [%c] (%t) %s%e%n"/>
            </formatter>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:batch:1.0">
            <job-repository>
                <in-memory/>
            </job-repository>
            <thread-pool>
                <max-threads count="10"/>
                <keepalive-time time="30" unit="seconds"/>
            </thread-pool>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:bean-validation:1.0"/>
        <subsystem xmlns="urn:jboss:domain:datasources:3.0">
            <datasources>
                <datasource jndi-name="java:jboss/datasources/ExampleDS" pool-name="ExampleDS" enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                </datasource>
                <datasource jndi-name="java:/datasources/ModeShapeDS" pool-name="ModeShapeDS" enabled="true" use-java-context="true">
                    <connection-url>jdbc:jcr:jndi:jcr?repositoryName=artifacts</connection-url>
                    <driver>modeshape</driver>
                    <connection-property name="workspace">extra</connection-property>
                    <security>
                        <user-name>admin</user-name>
                        <password>admin</password>
                    </security>
                </datasource>
                
                <datasource jndi-name="java:jboss/datasources/ModeshapeJDBCStoreDS" pool-name="ModeshapeJDBCStoreDS"
                            enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:modeshapeJDBCStore;DB_CLOSE_DELAY=-1</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                </datasource>

                <datasource jndi-name="java:jboss/datasources/ModeshapeBinaryStoreDS" pool-name="ModeshapeBinaryStoreDS"
                            enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:modeshapeJModeshapeBinaryStore;DB_CLOSE_DELAY=-1</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                </datasource>

                <datasource jndi-name="java:jboss/datasources/ModeshapeIndexStoreDS" pool-name="ModeshapeIndexStoreDS"
                            enabled="true" use-java-context="true">
                    <connection-url>jdbc:h2:mem:modeshapeJModeshapeIndexStore;DB_CLOSE_DELAY=-1</connection-url>
                    <driver>h2</driver>
                    <security>
                        <user-name>sa</user-name>
                        <password>sa</password>
                    </security>
                </datasource>

                <drivers>
                    <driver name="h2" module="com.h2database.h2">
                        <xa-datasource-class>org.h2.jdbcx.JdbcDataSource</xa-datasource-class>
                    </driver>
                    <driver name="modeshape" module="org.modeshape.jdbc">
                        <driver-class>org.modeshape.jdbc.LocalJcrDriver</driver-class>
                    </driver>
                </drivers>
            </datasources>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:deployment-scanner:2.0">
            <deployment-scanner path="deployments" relative-to="jboss.server.base.dir" scan-interval="5000" runtime-failure-causes-rollback="${jboss.deployment.scanner.rollback.on.failure:false}"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:ee:3.0">
            <spec-descriptor-property-replacement>false</spec-descriptor-property-replacement>
            <concurrent>
                <context-services>
                    <context-service name="default" jndi-name="java:jboss/ee/concurrency/context/default" use-transaction-setup-provider="true"/>
                </context-services>
                <managed-thread-factories>
                    <managed-thread-factory name="default" jndi-name="java:jboss/ee/concurrency/factory/default" context-service="default"/>
                </managed-thread-factories>
                <managed-executor-services>
                    <managed-executor-service name="default" jndi-name="java:jboss/ee/concurrency/executor/default" context-service="default" hung-task-threshold="60000" core-threads="5" max-threads="25" keepalive-time="5000"/>
                </managed-executor-services>
                <managed-scheduled-executor-services>
                    <managed-scheduled-executor-service name="default" jndi-name="java:jboss/ee/concurrency/scheduler/default" context-service="default" hung-task-threshold="60000" core-threads="2" keepalive-time="3000"/>
                </managed-scheduled-executor-services>
            </concurrent>
            <default-bindings context-service="java:jboss/ee/concurrency/context/default" datasource="java:jboss/datasources/ExampleDS" managed-executor-service="java:jboss/ee/concurrency/executor/default" managed-scheduled-executor-service="java:jboss/ee/concurrency/scheduler/default" managed-thread-factory="java:jboss/ee/concurrency/factory/default"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:ejb3:3.0">
            <session-bean>
                <stateful default-access-timeout="5000" cache-ref="simple" passivation-disabled-cache-ref="simple"/>
                <singleton default-access-timeout="5000"/>
            </session-bean>
            <pools>
                <bean-instance-pools>
                    <!-- A sample strict max pool configuration -->
                    <strict-max-pool name="slsb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
                    <strict-max-pool name="mdb-strict-max-pool" max-pool-size="20" instance-acquisition-timeout="5" instance-acquisition-timeout-unit="MINUTES"/>
                </bean-instance-pools>
            </pools>
            <caches>
                <cache name="simple"/>
                <cache name="distributable" aliases="passivating clustered" passivation-store-ref="infinispan"/>
            </caches>
            <passivation-stores>
                <passivation-store name="infinispan" cache-container="ejb" max-size="10000"/>
            </passivation-stores>
            <async thread-pool-name="default"/>
            <timer-service thread-pool-name="default" default-data-store="default-file-store">
                <data-stores>
                    <file-data-store name="default-file-store" path="timer-service-data" relative-to="jboss.server.data.dir"/>
                </data-stores>
            </timer-service>
            <remote connector-ref="http-remoting-connector" thread-pool-name="default"/>
            <thread-pools>
                <thread-pool name="default">
                    <max-threads count="10"/>
                    <keepalive-time time="100" unit="milliseconds"/>
                </thread-pool>
            </thread-pools>
            <default-security-domain value="other"/>
            <default-missing-method-permissions-deny-access value="true"/>
            <log-system-exceptions value="true"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:io:1.1">
            <worker name="default"/>
            <buffer-pool name="default"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:infinispan:3.0">
            <cache-container name="server" default-cache="default" module="org.wildfly.clustering.server">
                <local-cache name="default">
                    <transaction mode="BATCH"/>
                </local-cache>
            </cache-container>
            <cache-container name="web" default-cache="passivation" module="org.wildfly.clustering.web.infinispan">
                <local-cache name="passivation">
                    <locking isolation="REPEATABLE_READ"/>
                    <transaction mode="BATCH"/>
                    <file-store passivation="true" purge="false"/>
                </local-cache>
                <local-cache name="persistent">
                    <locking isolation="REPEATABLE_READ"/>
                    <transaction mode="BATCH"/>
                    <file-store passivation="false" purge="false"/>
                </local-cache>
            </cache-container>
            <cache-container name="ejb" default-cache="passivation" module="org.wildfly.clustering.ejb.infinispan" aliases="sfsb">
                <local-cache name="passivation">
                    <locking isolation="REPEATABLE_READ"/>
                    <transaction mode="BATCH"/>
                    <file-store passivation="true" purge="false"/>
                </local-cache>
                <local-cache name="persistent">
                    <locking isolation="REPEATABLE_READ"/>
                    <transaction mode="BATCH"/>
                    <file-store passivation="false" purge="false"/>
                </local-cache>
            </cache-container>
            <cache-container name="hibernate" default-cache="local-query" module="org.hibernate.infinispan">
                <local-cache name="local-query">
                    <eviction strategy="LRU" max-entries="10000"/>
                    <expiration max-idle="100000"/>
                </local-cache>
                <local-cache name="entity">
                    <transaction mode="NON_XA"/>
                    <eviction strategy="LRU" max-entries="10000"/>
                    <expiration max-idle="100000"/>
                </local-cache>
                <local-cache name="timestamps"/>
            </cache-container>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:modeshape:2.1">
            <!--The list of web applications that is packaged inside the kit and should be deployed when the subsystem starts up-->
            <webapp name="modeshape-rest.war"/>
            <webapp name="modeshape-webdav.war"/>

            <!-- A sample repository that uses the "sample" cache in the "modeshape" container. All content, binary values,
                 and indexes are stored within the server's data directory. This is the simplest way to configure a repository
                 that uses defaults for everything; feel free to change and specify other configuration options.  -->
            <repository name="sample" anonymous-roles="admin"/>
            
            <!-- A second sample repository that defines additional non-default components such as extra workspaces and sequencers. -->
            <repository name="artifacts" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <!-- Define 3 workspaces to exist upon startup -->
                <workspaces default-workspace="default" allow-workspace-creation="false">
                    <workspace name="default">
                        <initial-content>initial-content-default.xml</initial-content>
                    </workspace>
                    <workspace name="other"/>
                    <workspace name="extra"/>
                </workspaces>
                <!-- Define some indexes -->
                <index-providers>
                    <index-provider name="local" classname="local" path="modeshape/artifacts/indexes_local" relative-to="jboss.server.data.dir" />
                    <index-provider name="local_custom_settings" classname="local" path="modeshape/artifacts/indexes_local_custom/" relative-to="jboss.server.data.dir"
                                    cacheLRUEnable="true" mmapFileEnable="true" commitFileSyncDisable="true" transactionDisable="true"
                                    asyncWrite="true" cacheSize="100"/>
                    <index-provider classname="lucene" path="modeshape/artifacts/indexes_lucene" relative-to="jboss.server.data.dir" module="org.modeshape.index-provider.lucene"/> 
                </index-providers>
                <indexes>
                    <index name="names" provider-name="local" synchronous="true" kind="value" node-type="nt:base" columns="jcr:name(NAME)" />
                    <index name="titles" provider-name="lucene" synchronous="true" kind="value" node-type="mix:title" columns="jcr:title(STRING)"/>
                    <index name="textFromFiles" provider-name="lucene" synchronous="true" kind="text" node-type="nt:resource" columns="jcr:data(BINARY)"/>
                </indexes>
                <!--
                Define a bunch of sequencers. Carefully note the differences in the path expressions; some sequencers
                do not generate a node to represent a file, while other sequencers (e.g., XML, XSD, WSDL, ZIP) always
                generate a node based upon the filename.
                The sequencer names are unique identifiers within the configuration, and should not contain spaces.
                Also, some of the sequencer configurations use the fully-qualified classname, while other use the
                short alias (which only works for the sequencer provided by ModeShape). -->
                <sequencers max-pool-size="5" thread-pool-name="test-sequencer">
                    <sequencer name="delimited-text-sequencer" classname="org.modeshape.sequencer.text.DelimitedTextSequencer"
                               module="org.modeshape.sequencer.text" splitPattern=",">
                        <path-expression>/files(//*.csv[*])/jcr:content[@jcr:data] => /derived/text/delimited/$1
                        </path-expression>
                    </sequencer>
                    <sequencer name="fixed-width-text-sequencer"
                               classname="org.modeshape.sequencer.text.FixedWidthTextSequencer"
                               module="org.modeshape.sequencer.text" commentMarker="#">
                        <path-expression>/files(//*.txt[*])/jcr:content[@jcr:data] => /derived/text/fixedWidth/$1
                        </path-expression>
                    </sequencer>
                    <sequencer name="ddl-sequencer" classname="org.modeshape.sequencer.ddl.DdlSequencer"
                               module="org.modeshape.sequencer.ddl">
                        <path-expression>/files(//*.ddl[*])/jcr:content[@jcr:data] => /derived/ddl/$1</path-expression>
                    </sequencer>
                    <!--
                        For the java & class sequencer we need to explicitly define the module, as it does not map 1-1 to the classname
                    -->
                    <sequencer name="java-source-sequencer" classname="org.modeshape.sequencer.javafile.JavaFileSequencer"
                               module="org.modeshape.sequencer.java">
                        <path-expression>/files//(*.java[*])/jcr:content[@jcr:data] => /derived/java</path-expression>
                    </sequencer>
                    <sequencer name="java-class-sequencer" classname="org.modeshape.sequencer.classfile.ClassFileSequencer"
                               module="org.modeshape.sequencer.java">
                        <path-expression>/files//(*.class[*])/jcr:content[@jcr:data] => /derived/class</path-expression>
                    </sequencer>
                    <sequencer name="cnd-sequencer" classname="cnd" module="org.modeshape">
                        <path-expression>default:/files(//*.cnd[*])/jcr:content[@jcr:data] => /derived/cnd/$1</path-expression>
                    </sequencer>
                    <sequencer name="msoffice-sequencer" classname="msoffice" module="org.modeshape.sequencer.msoffice">
                        <path-expression>/files(//*.(xls|ppt|doc)[*])/jcr:content[@jcr:data] => /derived/msoffice/$1
                        </path-expression>
                    </sequencer>
                    <sequencer name="teiid-model-sequencer" classname="model" module="org.modeshape.sequencer.teiid">
                        <path-expression>/files(//*.xmi[*])/jcr:content[@jcr:data] => /derived/teiid/models/$1</path-expression>
                    </sequencer>
                    <sequencer name="teiid-vdb-sequencer" classname="vdb" module="org.modeshape.sequencer.teiid">
                        <path-expression>/files(//*.vdb[*])/jcr:content[@jcr:data] => /derived/teiid/vdbs/$1</path-expression>
                    </sequencer>
                    <!--
                     The XSD, XML, WSDL, and ZIP sequencers all generate a node for the input documents, and so we don't want the filename to
                     be included in the output path. Therefore, only the relative path under '/files' and above '*.xsd' (or '*.wsdl'
                     or '*.xml') is captured in the input path. -->
                    <sequencer name="xsd-sequencer" classname="xsd" module="org.modeshape.sequencer.xsd">
                        <path-expression>/files(//*).xsd[*]/jcr:content[@jcr:data] => /derived/xsd/$1</path-expression>
                    </sequencer>
                    <sequencer name="wsdl-sequencer" classname="wsdl" module="org.modeshape.sequencer.wsdl">
                        <path-expression>/files(//)*.wsdl[*]/jcr:content[@jcr:data] => /derived/wsdl/$1</path-expression>
                    </sequencer>
                    <sequencer name="xml-sequencer" classname="xml" module="org.modeshape.sequencer.xml">
                        <path-expression>/files(//)*.xml[*]/jcr:content[@jcr:data] => /derived/xml/$1</path-expression>
                    </sequencer>
                    <sequencer name="zip-sequencer" classname="zip" module="org.modeshape.sequencer.zip">
                        <path-expression>/files(//*.zip[*])/jcr:content[@jcr:data] => /derived/zip/$1</path-expression>
                    </sequencer>
                    <sequencer name="image-sequencer" classname="image" module="org.modeshape.sequencer.image">
                        <path-expression>/files(//*.(png|jpg|gif)[*])/jcr:content[@jcr:data] => /derived/image/$1
                        </path-expression>
                    </sequencer>
                    <sequencer name="mp3-sequencer" classname="mp3" module="org.modeshape.sequencer.mp3">
                        <path-expression>/files(//*.mp3[*])/jcr:content[@jcr:data] => /derived/mp3/$1</path-expression>
                    </sequencer>
                    <sequencer name="zip-sequencer-manual" classname="zip" module="org.modeshape.sequencer.zip"/>
                </sequencers>
                <text-extractors max-pool-size="5" thread-pool-name="test-text-extractor">
                    <text-extractor name="tika-extractor" classname="tika" module="org.modeshape.extractor.tika"/>
                </text-extractors>
                <file-binary-storage mime-type-detection="content"/>
            </repository>
            <repository name="preconfiguredRepository" anonymous-roles="admin"
                        cache-config="modeshape/infinispan-test-caches.xml"
                        event-bus-size="2048">
            <workspaces>
                    <workspace name="default"/>
                    <workspace name="other"/>
                    <workspace name="extra">
                        <initial-content>initial-content-custom.xml</initial-content>
                    </workspace>
                    <workspace name="empty">
                        <initial-content/>
                    </workspace>
                    <!--Defines a default initial content which will be imported in all the workspaces which don't have smth configured-->
                    <initial-content>initial-content-default.xml</initial-content>
                </workspaces>
                <node-types>
                    <node-type>custom.cnd</node-type>
                </node-types>
            </repository>
            <repository name="federatedRepository" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <workspaces allow-workspace-creation="true" default-workspace="default">
                    <workspace name="default"/>
                    <workspace name="other"/>
                </workspaces>
                <external-sources>
                    <source name="filesystem_readonly" classname="org.modeshape.connector.filesystem.FileSystemConnector"
                            directoryPath="${rootDirectoryPath}" cacheTtlSeconds="1" readonly="true" exposeAsWorkspace="filesystem">
                        <projection>default:/projection1 => /</projection>
                        <projection>other:/projection1 => /</projection>
                    </source>
                    <source name="filesystem_writable" classname="org.modeshape.connector.filesystem.FileSystemConnector"
                            directoryPath="${rootDirectoryPath}" cacheTtlSeconds="1" readonly="false">
                        <projection>default:/root => /</projection>
                    </source>
                    <source name="git" classname="org.modeshape.connector.git.GitConnector" module="org.modeshape.connector.git"
                            directoryPath="${gitRepositoryRootPath}" remoteName="upstream,origin" cacheTtlSeconds="1"
                            readonly="true">
                        <projection>default:/modeshape_git => /</projection>
                    </source>
                    <source name="jdbc-metadata" classname="org.modeshape.connector.meta.jdbc.JdbcMetadataConnector"
                            module="org.modeshape.connector.jdbc.metadata" dataSourceJndiName="java:jboss/datasources/ExampleDS">
                        <projection>default:/ModeShapeTestDb => /</projection>
                    </source>
                </external-sources>
            </repository>
            <repository name="jdbcRepository" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <workspaces allow-workspace-creation="true" default-workspace="default">
                    <workspace name="default"/>
                    <initial-content>initial-content-default.xml</initial-content>
                </workspaces>
            </repository>
            <repository name="jdbcRepositoryWithEviction" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <workspaces allow-workspace-creation="true" default-workspace="default">
                    <workspace name="default"/>
                    <initial-content>initial-content-default.xml</initial-content>
                </workspaces>
            </repository>
            <repository name="infinispanRepository" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <workspaces cache-config="modeshape/ws-cache-config.xml">
                    <workspace name="default"/>
                </workspaces>
                <cache-binary-storage data-cache-name="binary-fs"
                                      metadata-cache-name="binary-fs-meta"
                                      cache-config="modeshape/infinispan-test-binary-caches.xml"
                                      min-string-size="10"
                                      min-value-size="1024"
                                      chunk-size="1000"
                                      mime-type-detection="name"/>
            </repository>
            <repository name="binaryJDBCRepository" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <cache-binary-storage cache-config="modeshape/infinispan-test-binary-caches.xml" mime-type-detection="none"/>
            </repository>
            <repository name="dbBinaryJDBCRepository" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <db-binary-storage data-source-jndi-name="java:jboss/datasources/ExampleDS" mime-type-detection="none"/>
            </repository>
            <repository name="binaryIndexingJDBCRepository" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <cache-binary-storage cache-config="modeshape/infinispan-test-binary-caches.xml"
                                      data-cache-name="binaryJDBCRepository-binary-data-wb"
                                      metadata-cache-name="binaryJDBCRepository-binary-metadata-wb"
                                      mime-type-detection="none"/>
            </repository>
            <repository name="transient" anonymous-roles="admin" cache-name="sample" cache-config="modeshape/infinispan-test-caches.xml">
                <transient-binary-storage min-string-size="100" mime-type-detection="none"/>
            </repository>
            <repository name="repo-clustered1" cache-config="modeshape/infinispan-test-clustered-caches.xml" anonymous-roles="admin"/>
            <repository name="repo-clustered2" cache-config="modeshape/infinispan-test-clustered-caches.xml" anonymous-roles="admin"/>

            <repository name="compositeBinaryStoreRepository" cache-config="modeshape/infinispan-test-caches.xml" anonymous-roles="admin">
                <composite-binary-storage min-value-size="100">
                    <file-binary-storage store-name="fs1"
                                         path="modeshape/compositeBinaryStoreRepository/binaries/fs1"
                                         relative-to="jboss.server.data.dir"/>
                    <file-binary-storage store-name="fs2"
                                         path="modeshape/compositeBinaryStoreRepository/binaries/fs2"
                                         relative-to="jboss.server.data.dir"/>
                    <cache-binary-storage store-name="default"
                                          data-cache-name="binary-fs"
                                          metadata-cache-name="binary-fs-meta"
                            />
                </composite-binary-storage>
            </repository>
            <repository name="journalingRepository" cache-config="modeshape/infinispan-test-caches.xml" anonymous-roles="admin">
                <journaling max-days-to-keep-records="15" async-writes="false"/>
            </repository>
            <repository name="anonymousRepository" cache-config="modeshape/infinispan-test-caches.xml" anonymous-roles=""/>
            <repository name="defaultAnonymousRepository" cache-config="modeshape/infinispan-test-caches.xml"/>
            <repository name="optimizationRepository"
                        cache-config="modeshape/infinispan-test-caches.xml"
                        document-optimization-child-count-target="10"
                        document-optimization-child-count-tolerance="10"
                        document-optimization-initial-time="02:00"
                        document-optimization-interval="24"
                        document-optimization-thread-pool="modeshape-opt"/>
            <repository name="customAuthenticatorRepository" cache-config="modeshape/infinispan-test-caches.xml" cache-name="anonymousRepository">
                <authenticators>
                    <authenticator classname="org.modeshape.test.integration.CustomAuthenticationProvider" 
                                   module="deployment.security-test.war"
                                   username="arquillian"/>
                </authenticators>
            </repository>

            <repository name="reindexingRepository" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml" cache-name="sample">
                <reindexing mode="incremental" async="false"/>
                <journaling max-days-to-keep-records="15" async-writes="false"/>
            </repository>

            <repository name="repo-with-es-index" anonymous-roles="admin" cache-config="modeshape/infinispan-test-caches.xml">
                <workspaces allow-workspace-creation="true" default-workspace="default">
                    <workspace name="default"/>
                    <initial-content>initial-content-default.xml</initial-content>
                </workspaces>
                <!-- Define some indexes -->
                <index-providers>
                    <index-provider name="elasticsearch" classname="org.modeshape.jcr.index.elasticsearch.EsIndexProvider" module="org.modeshape.index-provider.elasticsearch"/> 
                </index-providers>
                <indexes>
                    <index name="mime-types" provider-name="elasticsearch" synchronous="true" kind="value" node-type="mix:mimeType" columns="jcr:mimeType(STRING)"/>
                </indexes>
            </repository>

            <!--These should be deployed after the repositories, because they use servlet context listeners to load all repositories-->
            <webapp name="modeshape-cmis.war"/>
            <webapp name="modeshape-explorer.war"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:jaxrs:1.0"/>
        <subsystem xmlns="urn:jboss:domain:jca:3.0">
            <archive-validation enabled="true" fail-on-error="true" fail-on-warn="false"/>
            <bean-validation enabled="true"/>
            <default-workmanager>
                <short-running-threads>
                    <core-threads count="50"/>
                    <queue-length count="50"/>
                    <max-threads count="50"/>
                    <keepalive-time time="10" unit="seconds"/>
                </short-running-threads>
                <long-running-threads>
                    <core-threads count="50"/>
                    <queue-length count="50"/>
                    <max-threads count="50"/>
                    <keepalive-time time="10" unit="seconds"/>
                </long-running-threads>
            </default-workmanager>
            <cached-connection-manager/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:jdr:1.0"/>
        <subsystem xmlns="urn:jboss:domain:jmx:1.3">
            <expose-resolved-model/>
            <expose-expression-model/>
            <remoting-connector/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:jpa:1.1">
            <jpa default-datasource="" default-extended-persistence-inheritance="DEEP"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:jsf:1.0"/>
        <subsystem xmlns="urn:jboss:domain:mail:2.0">
            <mail-session name="default" jndi-name="java:jboss/mail/Default">
                <smtp-server outbound-socket-binding-ref="mail-smtp"/>
            </mail-session>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:naming:2.0">
            <remote-naming/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:pojo:1.0"/>
        <subsystem xmlns="urn:jboss:domain:remoting:3.0">
            <endpoint worker="default"/>
            <http-connector name="http-remoting-connector" connector-ref="default" security-realm="ApplicationRealm"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:resource-adapters:3.0"/>
        <subsystem xmlns="urn:jboss:domain:request-controller:1.0"/>
        <subsystem xmlns="urn:jboss:domain:sar:1.0"/>
        <subsystem xmlns="urn:jboss:domain:security-manager:1.0">
            <deployment-permissions>
                <maximum-set>
                    <permission class="java.security.AllPermission"/>
                </maximum-set>
            </deployment-permissions>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:security:1.2">
            <security-domains>
                <security-domain name="other" cache-type="default">
                    <authentication>
                        <login-module code="Remoting" flag="optional">
                            <module-option name="password-stacking" value="useFirstPass"/>
                        </login-module>
                        <login-module code="RealmDirect" flag="required">
                            <module-option name="password-stacking" value="useFirstPass"/>
                        </login-module>
                    </authentication>
                </security-domain>
                <security-domain name="jboss-web-policy" cache-type="default">
                    <authorization>
                        <policy-module code="Delegating" flag="required"/>
                    </authorization>
                </security-domain>
                <security-domain name="jboss-ejb-policy" cache-type="default">
                    <authorization>
                        <policy-module code="Delegating" flag="required"/>
                    </authorization>
                </security-domain>
                <security-domain name="modeshape-security" cache-type="default">
                    <authentication>
                        <!--Overwrite the security domain to allow testing via simple users and password-->
                        <login-module code="UsersRoles" flag="required">
                            <module-option name="usersProperties" value="${jboss.server.config.dir}/modeshape-users.properties"/>
                            <module-option name="rolesProperties" value="${jboss.server.config.dir}/modeshape-roles.properties"/>
                        </login-module>
                        <login-module code="RealmDirect" flag="optional">
                            <module-option name="password-stacking" value="useFirstPass"/>
                        </login-module>
                    </authentication>
                </security-domain>
            </security-domains>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:transactions:3.0">
            <core-environment>
                <process-id>
                    <uuid/>
                </process-id>
            </core-environment>
            <recovery-environment socket-binding="txn-recovery-environment" status-socket-binding="txn-status-manager"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:undertow:2.0">
            <buffer-cache name="default"/>
            <server name="default-server">
                <!-- Make sure to override max-post-size because some tests need this for binary values -->
                <http-listener name="default" socket-binding="http" max-post-size="112400000"/>
                <host name="default-host" alias="localhost">
                    <location name="/" handler="welcome-content"/>
                    <filter-ref name="server-header"/>
                    <filter-ref name="x-powered-by-header"/>
                </host>
            </server>
            <servlet-container name="default">
                <jsp-config/>
                <websockets/>
            </servlet-container>
            <handlers>
                <file name="welcome-content" path="${jboss.home.dir}/welcome-content"/>
            </handlers>
            <filters>
                <response-header name="server-header" header-name="Server" header-value="WildFly/9"/>
                <response-header name="x-powered-by-header" header-name="X-Powered-By" header-value="Undertow/1"/>
            </filters>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:webservices:2.0">
            <wsdl-host>${jboss.bind.address:127.0.0.1}</wsdl-host>
            <endpoint-config name="Standard-Endpoint-Config"/>
            <endpoint-config name="Recording-Endpoint-Config">
                <pre-handler-chain name="recording-handlers" protocol-bindings="##SOAP11_HTTP ##SOAP11_HTTP_MTOM ##SOAP12_HTTP ##SOAP12_HTTP_MTOM">
                    <handler name="RecordingHandler" class="org.jboss.ws.common.invocation.RecordingServerHandler"/>
                </pre-handler-chain>
            </endpoint-config>
            <client-config name="Standard-Client-Config"/>
        </subsystem>
        <subsystem xmlns="urn:jboss:domain:weld:2.0"/>
    </profile>
    <interfaces>
        <interface name="management">
            <inet-address value="${jboss.bind.address.management:127.0.0.1}"/>
        </interface>
        <interface name="public">
            <inet-address value="${jboss.bind.address:127.0.0.1}"/>
        </interface>
        <!-- TODO - only show this if the jacorb subsystem is added  -->
        <interface name="unsecure">
            <!--
              ~  Used for IIOP sockets in the standard configuration.
              ~                  To secure JacORB you need to setup SSL 
              -->
            <inet-address value="${jboss.bind.address.unsecure:127.0.0.1}"/>
        </interface>
    </interfaces>
    <socket-binding-group name="standard-sockets" default-interface="public" port-offset="${jboss.socket.binding.port-offset:0}">
        <socket-binding name="management-http" interface="management" port="${jboss.management.http.port:9990}"/>
        <socket-binding name="management-https" interface="management" port="${jboss.management.https.port:9993}"/>
        <socket-binding name="ajp" port="${jboss.ajp.port:8009}"/>
        <socket-binding name="http" port="${jboss.http.port:8080}"/>
        <socket-binding name="https" port="${jboss.https.port:8443}"/>
        <socket-binding name="txn-recovery-environment" port="4712"/>
        <socket-binding name="txn-status-manager" port="4713"/>
        <outbound-socket-binding name="mail-smtp">
            <remote-destination host="localhost" port="25"/>
        </outbound-socket-binding>
    </socket-binding-group>
</server>