<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <parent>
        <groupId>org.jboss</groupId>
        <artifactId>jboss-parent</artifactId>
        <version>9</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.modeshape</groupId>
    <artifactId>modeshape-parent</artifactId>
    <version>3.1-SNAPSHOT</version>
    <name>ModeShape Parent</name>

    <url>http://www.modeshape.org</url>
    <packaging>pom</packaging>
    <description>ModeShape is a JCR repository implementation with support for federation and sequencing.</description>
    <inceptionYear>2008</inceptionYear>

    <organization>
        <name>JBoss, a division of Red Hat</name>
        <url>http://www.jboss.org</url>
    </organization>

    <licenses>
        <license>
            <name>GNU Lesser General Public License</name>
            <url>http://repository.jboss.org/licenses/lgpl-2.1.txt</url>
            <!--url>http://www.gnu.org/licenses/lgpl.html</url-->
            <distribution>repo</distribution>
            <comments>A business-friendly OSS license</comments>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/ModeShape/modeshape.git</connection>
        <developerConnection>scm:git:git@github.com:ModeShape/modeshape.git</developerConnection>
        <url>http://github.com/ModeShape/modeshape</url>
    </scm>

    <issueManagement>
        <system>jira</system>
        <url>http://issues.jboss.org/browse/MODE</url>
    </issueManagement>

    <developers>
        <developer>
            <name>Randall Hauch</name>
            <id>randall</id>
            <email>rhauch@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Project Lead</role>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Van Halbert</name>
            <id>vhalbert@redhat.com</id>
            <email>vhalbert@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Horia Chiorean</name>
            <id>hchiorea@redhat.com</id>
            <email>hchiorea@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+2</timezone>
        </developer>
        <developer>
            <name>Dan Florian</name>
            <id>dan</id>
            <email>dflorian@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-5</timezone>
        </developer>
        <developer>
            <name>Stefano Maestri</name>
            <id>stefano</id>
            <email>stefano.maestri@javalinux.it</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Serge Pagop</name>
            <id>spagop</id>
            <email>Serge.Pagop@innoq.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Michael Trezzi</name>
            <id>mathwizard</id>
            <email>michael@mathwizard.org</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Alexandre Porcelli</name>
            <id>porcelli</id>
            <email>porcelli@devexp.com.br</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-3</timezone>
        </developer>
        <developer>
            <name>Sergiy Litsenko</name>
            <id>lisbor</id>
            <email>litsenko_sergey@yahoo.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+10</timezone>
        </developer>
        <developer>
            <name>Vijay Kiran</name>
            <id>vijay.duvvuri</id>
            <email>mail@vijaykiran.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
        <developer>
            <name>Oleg Kulikov</name>
            <id>okulikov</id>
            <email>okulikov@redhat.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+4</timezone>
        </developer>
        <developer>
            <name>Ted Jones</name>
            <id>tejones</id>
            <email>tejones@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>Barry LaFond</name>
            <id>blafond</id>
            <email>blafond@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
        <developer>
            <name>John Verhaeg</name>
            <id>jverhaeg</id>
            <email>jverhaeg@redhat.com</email>
            <organization>JBoss, a division of Red Hat</organization>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>-6</timezone>
        </developer>
    </developers>

    <contributors>
        <contributor>
            <name>Greg Haber</name>
            <organization>JBoss, a division of Red Hat</organization>
            <timezone>-5</timezone>
        </contributor>
        <contributor>
            <name>George Gastaldi</name>
            <email>gegastaldi@gmail.com</email>
            <timezone>-3</timezone>
        </contributor>
    </contributors>

    <properties>

        <!-- Used to define the JCR Descriptor value -->
        <jcr.repository.vendor>${project.organization.name}</jcr.repository.vendor>
        <jcr.repository.name>ModeShape</jcr.repository.name>

        <!-- Instruct the build to use only UTF-8 encoding for source code -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!--
              These are properties used in the database profiles. Must initialize
              them to be empty so that Maven applies them via filtering to the
              resources. If a project needs files filtered, however, make sure to
              include a 'testResources' fragment in the 'build' section of the
              child project POM to say which files need to be filtered. See the
              "modeshape-integration" or "extensions/modeshape-connector-store-jpa"
              project POMs for examples.
          -->
        <jpaSource.dialect/>
        <jpaSource.driverClassName/>
        <jpaSource.url/>
        <jpaSource.username/>
        <jpaSource.password/>
        <jpaSource.maximumConnectionsInPool>2</jpaSource.maximumConnectionsInPool>
        <jpaSource.minimumConnectionsInPool>1</jpaSource.minimumConnectionsInPool>
        <jpaSource.numberOfConnectionsToAcquireAsNeeded>1</jpaSource.numberOfConnectionsToAcquireAsNeeded>
        <jpaSource.maximumSizeOfStatementCache>100</jpaSource.maximumSizeOfStatementCache>
        <jpaSource.maximumConnectionIdleTimeInSeconds>10</jpaSource.maximumConnectionIdleTimeInSeconds>
        <jpaSource.referentialIntegrityEnforced>true</jpaSource.referentialIntegrityEnforced>
        <jpaSource.largeValueSizeInBytes>150</jpaSource.largeValueSizeInBytes>
        <jpaSource.autoGenerateSchema>create</jpaSource.autoGenerateSchema>
        <jpaSource.compressData>true</jpaSource.compressData>
        <jpaSource.cacheTimeToLiveInMilliseconds/>
        <jpaSource.creatingWorkspacesAllowed/>
        <jpaSource.defaultWorkspaceName/>
        <jpaSource.predefinedWorkspaceNames/>
        <jpaSource.model/>
        <jpaSource.referentialIntegrityEnforced>true</jpaSource.referentialIntegrityEnforced>
        <jpaSource.retryLimit>3</jpaSource.retryLimit>
        <jpaSource.rootNodeUuid/>
        <jpaSource.showSql>false</jpaSource.showSql>
        <metadata.collectorClassName>org.modeshape.connector.meta.jdbc.JdbcMetadataCollector</metadata.collectorClassName>
        <jgroups.preferIpv4>false</jgroups.preferIpv4>
        <jgroups.preferIpv6>false</jgroups.preferIpv6>
        <debug.argline/>
        <!--
          Global dependency version information
          -->
        <modeshape.java.version>1.6</modeshape.java.version>

        <joda.time.version>1.6.2</joda.time.version>
        <junit.version>4.10</junit.version>
        <hamcrest.version>1.1</hamcrest.version>
        <mockito.all.version>1.8.4</mockito.all.version>
        <slf4j.api.version>1.6.1</slf4j.api.version>
        <slf4j.log4j.version>1.6.1</slf4j.log4j.version>
        <log4j.version>1.2.16</log4j.version>
        <jcr.version>2.0</jcr.version>
        <jackrabbit.jcr.tck.version>2.5.1</jackrabbit.jcr.tck.version>
        <jackrabbit.lucene.version>3.6.0</jackrabbit.lucene.version>
        <jbossjta.version>4.16.2.Final</jbossjta.version>
        <picketbox.version>4.0.7.Final</picketbox.version>
        <byteman.version>1.5.1</byteman.version>
        <lucene.version>3.5.0</lucene.version>
        <lucene.module.slot>3.5</lucene.module.slot>
        <lucene.regex.version>3.0.3</lucene.regex.version>
        <lucene.regex.jakarta.version>1.4</lucene.regex.jakarta.version>
        <!-- These versions of Hibernate Search transitive dependencies are used in creating the Hibernate Search AS7 module.
             When changing the version of Hiberate Search version, update these and the 
             'deploy/jbossas/kit/jboss-as7/modules/org/hibernate/search/engine/main/module.xml' file. Note that Hibernate Search
             forcibly overrides the Jackson libraries -->
        <hibernate.search.version>4.1.1.Final</hibernate.search.version>
        <hibernate.search.avro.version>1.5.1</hibernate.search.avro.version>
        <hibernate.search.jackson-mapper-asl.version>1.9.2</hibernate.search.jackson-mapper-asl.version>
        <hibernate.search.jackson-core-asl.version>1.9.2</hibernate.search.jackson-core-asl.version>
        <hibernate.search.paranamer.version>2.3</hibernate.search.paranamer.version>
        <hibernate.search.snappy.version>1.0.1-rc3</hibernate.search.snappy.version>
        <hibernate.search.module.slot>4.1</hibernate.search.module.slot>
        <infinispan.version>5.1.2.FINAL</infinispan.version>
        <!--Make sure the jgroups version is the same as the one used by ISPN -->
        <jgroups.version>3.0.6.Final</jgroups.version>
        <c3p0.version>0.9.1.2</c3p0.version>
        <jboss.logging.version>3.1.0.CR2</jboss.logging.version>

        <sun.xml.bind.jaxbimpl.version>2.1.12</sun.xml.bind.jaxbimpl.version>
        <jdbc.mysql.version>5.0.7</jdbc.mysql.version>
        <jdbc.derby.version>10.8.1.2</jdbc.derby.version>
        <jdbc.hsqldb.version>1.8.0.2</jdbc.hsqldb.version>
        <jdbc.h2.version>1.2.124</jdbc.h2.version>
        <jdbc.postgresql.version>8.4-701.jdbc3</jdbc.postgresql.version>
        <jdbc.mysql5.version>5.1.7</jdbc.mysql5.version>
        <jdbc.db2v9.version>3.58.82</jdbc.db2v9.version>
        <jdbc.db2v9.license.version>3.57.86</jdbc.db2v9.license.version>
        <jdbc.oracle10g.version>10.0.2.0</jdbc.oracle10g.version>
        <jdbc.oracle11g.version>11.1.0.7.0</jdbc.oracle11g.version>
        <jdbc.sybase15.version>6.0.5</jdbc.sybase15.version>
        <jdbc.mssql2008.version>2.0.1008.2</jdbc.mssql2008.version>
        <javax.servlet.version>2.5</javax.servlet.version>
        <javax.jacc.version>1.0.0.Final</javax.jacc.version>
        <jboss.seam.version>2.2.2.Final</jboss.seam.version>
        <resteasy.version>2.3.2.Final</resteasy.version>
        <jettison.version>1.1</jettison.version>
        <httpclient.version>4.1.2</httpclient.version>
        <sardine.version>146</sardine.version>
        <javaassist.version>3.11.0.GA</javaassist.version>
        <jaudiotagger.version>2.0.3</jaudiotagger.version>
        <poi.version>3.8</poi.version>
        <jcommander.version>1.5</jcommander.version>
        <wsdl4j.version>1.6.2</wsdl4j.version>
        <bson4jackson.version>1.1.2</bson4jackson.version>
        <mongo.driver.version>2.7.3</mongo.driver.version>
        <embedmongo.version>1.25</embedmongo.version>
        <json.simple.version>1.1</json.simple.version>
        <logback.version>0.9.29</logback.version>
        <jgit.version>2.1.0.201209190230-r</jgit.version>
        <jgit.jsch.version>0.1.44-1</jgit.jsch.version>
        <eclipse.equinox.common.version>3.3.0-v20070426</eclipse.equinox.common.version>
        <eclipse.jdt.core.version>3.3.0-v_771</eclipse.jdt.core.version>
        <eclipse.core.resources.version>3.3.0-v20070604</eclipse.core.resources.version>
        <eclipse.core.expressions.version>3.3.0-v20070606-0010</eclipse.core.expressions.version>
        <eclipse.core.runtime.version>3.3.100-v20070530</eclipse.core.runtime.version>
        <eclipse.osgi.version>3.3.0-v20070530</eclipse.osgi.version>
        <eclipse.core.jobs.version>3.3.0-v20070423</eclipse.core.jobs.version>
        <eclipse.equinox.registry.version>3.3.0-v20070522</eclipse.equinox.registry.version>
        <eclipse.equinox.preferences.version>3.2.100-v20070522</eclipse.equinox.preferences.version>
        <eclipse.core.contenttype.version>3.2.100-v20070319</eclipse.core.contenttype.version>
        <eclipse.xsd.version>2.2.3</eclipse.xsd.version>
        <eclipse.emf.common.version>2.4.0</eclipse.emf.common.version>
        <eclipse.emf.ecore.version>2.4.2</eclipse.emf.ecore.version>
        <eclipse.emf.ecorechange.version>2.2.3</eclipse.emf.ecorechange.version>
        <eclipse.emf.ecorexmi.version>2.4.1</eclipse.emf.ecorexmi.version>
        <tika.version>1.2</tika.version>

        <!--WebDAV servlet-->
        <jmock.version>2.4.0</jmock.version>
        <spring.webmvc>2.5.2</spring.webmvc>
        <spring.mock>2.0.7</spring.mock>

        <!-- Apache chemistry version -->
        <chemistry.version>0.7.0</chemistry.version>

        <!--
            JBOSS AS 7.1.1.Final
        -->
        <jbossas-version>7.1.1.Final</jbossas-version>
        <javax.connector-api.version>1.5</javax.connector-api.version>
        <javax.jta.version>1.1</javax.jta.version>
        <jbossas7.assembly.descriptor.version>71</jbossas7.assembly.descriptor.version>

        <!--
            JBOSS AS 7.2
        -->
        <!--jbossas-version>7.2.0.Alpha1-SNAPSHOT</jbossas-version-->

        <!--
            RHQ
        -->
        <!--
        <org.jboss.rhq.as5.version>1.2.0.GA</org.jboss.rhq.as5.version>
        <org.rhq.version>1.3.0.GA</org.rhq.version>
        <rhq.jboss.as5.plugin.version>1.4.0.B01</rhq.jboss.as5.plugin.version>
        -->

        <!--
          Maven plugin versions
          -->
        <cargo.container>jetty7x</cargo.container>
        <maven.codehaus.cargo.plugin.version>1.2.2</maven.codehaus.cargo.plugin.version>
        <version.jar.plugin>2.4</version.jar.plugin>
        <version.javadoc.plugin>2.8.1</version.javadoc.plugin>
        <version.bundle.plugin>2.3.7</version.bundle.plugin>

        <!--The name of the modeshape-client artifact used by tools-->
        <client.artifactId>modeshape-client</client.artifactId>

	<!-- IronJacamar container -->
        <version.org.jboss.ironjacamar>1.0.13.Final</version.org.jboss.ironjacamar>
    </properties>

    <profiles>

        <!--
              ###################################################################
              Clustering-related profiles
              ###################################################################

              To use, specify "-DpreferIpv4" or "-DpreferIpv6" on the Maven command line,
              depending upon your environment's network configuration.
          -->
        <profile>
            <id>preferIpv4</id>
            <activation>
                <property>
                    <name>!preferIpv6</name>
                </property>
            </activation>
            <properties>
                <jgroups.preferIpv4>true</jgroups.preferIpv4>
                <jgroups.preferIpv6>false</jgroups.preferIpv6>
            </properties>
        </profile>
        <profile>
            <id>preferIpv6</id>
            <properties>
                <jgroups.preferIpv4>false</jgroups.preferIpv4>
                <jgroups.preferIpv6>true</jgroups.preferIpv6>
            </properties>
        </profile>

        <!--
              ###################################################################
              Enable remotely debugging on the command line
              ###################################################################

              To use, specify "-Ddebug=true" on the Maven command line
              (typically used when running a single test). Then, start
              remote debugger (on port 1044) and connect.
          -->
        <profile>
            <id>debug</id>
            <activation>
                <property>
                    <name>debug</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <!-- Useful for remotely debugging the unit tests run by Surefire ... -->
                <debug.argline>-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=1044</debug.argline>
            </properties>
        </profile>

        <!--
            ###################################################################
            Database profiles to specify which DBMS is used for tests.
            ###################################################################
        -->

        <!--
              The default test environment is H2
          -->
        <profile>
            <id>default_dbms</id>
            <activation>
                <property>
                    <name>!database</name>
                </property>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <version>${jdbc.h2.version}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <properties>
                <dataSource.driverClassName>org.h2.Driver</dataSource.driverClassName>
                <dataSource.driverClassName>org.h2.Driver</dataSource.driverClassName>
                <dataSource.url>jdbc:h2:mem:${project.build.directory}/db/h2/modeshape</dataSource.url>
                <dataSource.username>sa</dataSource.username>
                <dataSource.password/>
            </properties>
        </profile>

        <profile>
            <id>ispn515</id>
            <properties>
                <!--The following versions are also used by AS7.2-->
                <infinispan.version>5.1.5.FINAL</infinispan.version>
                <jgroups.version>3.1.0.Final</jgroups.version>
                <jboss.logging.version>3.1.0.GA</jboss.logging.version>
            </properties>
        </profile>
        
        <profile>
            <id>as72</id>
            <properties>
                <jbossas-version>7.2.0.Alpha1-SNAPSHOT</jbossas-version>
                <infinispan.version>5.1.5.FINAL</infinispan.version>
                <jgroups.version>3.1.0.Final</jgroups.version>
                <jboss.logging.version>3.1.2.GA</jboss.logging.version>
                <jbossas7.assembly.descriptor.version>72</jbossas7.assembly.descriptor.version>
            </properties>
        </profile>
    </profiles>

    <build>
        <!--
              This section defines the default plugin settings inherited by child
              projects.
          -->
        <pluginManagement>
            <plugins>
                <!--
                        Fixes how test resources of a project can be used in projects
                        dependent on it
                    -->
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <extensions>true</extensions>
                    <configuration>
                        <instructions>
                            <Export-Package>org.modeshape.*</Export-Package>
                        </instructions>
                    </configuration>
                </plugin>

                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <dependencies>
                        <dependency>
                            <groupId>org.modeshape</groupId>
                            <artifactId>modeshape-assembly-descriptors</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.cargo</groupId>
                    <artifactId>cargo-maven2-plugin</artifactId>
                    <version>${maven.codehaus.cargo.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>start-container</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>start</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>stop-container</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>stop</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <skip>${skipTests}</skip>
                        <container>
                            <containerId>${cargo.container}</containerId>
                            <log>${project.build.directory}/cargo.log</log>
                            <home>${project.build.directory}/cargo</home>
                            <type>embedded</type>
                        </container>
                        <configuration>
                            <properties>
                                <cargo.logging>high</cargo.logging>
                                <cargo.servlet.users>dnauser:password:connect,readwrite,admin|unauthorized:password:bogus</cargo.servlet.users>
                                <cargo.servlet.port>8090</cargo.servlet.port>
                            </properties>
                        </configuration>
                    </configuration>
                </plugin>

                <!--
                    Inform m2e to ignore build errors. These errors started occurring after upgrading to Eclipse Indigo (3.7). This
                    issue is discussed/solved here: http://stackoverflow.com/questions/8706017/maven-dependency-plugin-goals-copy-dependencies-unpack-is-not-supported-b
                -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <!-- copy-dependency plugin -->
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.apache.maven.plugins</groupId>
                                        <artifactId>maven-dependency-plugin</artifactId>
                                        <versionRange>[1.0.0,)</versionRange>
                                        <goals>
                                            <goal>copy-dependencies</goal>
                                            <goal>unpack</goal>
                                         </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <!-- Specify the compiler options and settings -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>${modeshape.java.version}</source>
                    <target>${modeshape.java.version}</target>
                    <showDeprecation>false</showDeprecation>
                    <showWarnings>false</showWarnings>
                </configuration>
            </plugin>
            <!-- Produce source jars during package and test-source jars during the 'verify' phase -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                    <id>attach-sources</id>
                    <goals>
                        <goal>jar-no-fork</goal>
                    </goals>
                    </execution>
                    <execution>
                        <id>attach-test-sources</id>
                        <goals>
                            <goal>test-jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <!-- Manually specify the JUnit provider; see MODE-1140 -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.surefire</groupId>
                        <!--artifactId>surefire-junit47</artifactId-->
                        <artifactId>surefire-junit4</artifactId>
                        <!--artifactId>surefire-junit3</artifactId-->
                        <version>${version.surefire.plugin}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <systemProperties combine.children="append">
                        <property>
                            <name>java.io.tmpdir</name>
                            <value>${basedir}/target</value>
                        </property>
                        <property>
                            <name>java.net.preferIPv4Stack</name>
                            <value>${jgroups.preferIpv4}</value>
                        </property>
                        <property>
                            <name>java.net.preferIPv6Addresses</name>
                            <value>${jgroups.preferIpv6}</value>
                        </property>
                    </systemProperties>
                    <argLine>-Xmx1024M ${debug.argline} -XX:MaxPermSize=256M</argLine>
                    <runOrder>alphabetical</runOrder>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-eclipse-plugin</artifactId>
            </plugin>

            <!--
                   Build a test-jar for each project, so that src/test/* resources and
                   classes can be used in other projects. Also customize how the jar
                   files are assembled.
               -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <id>test-jar</id>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
                <!--Used so that OSGI information can be added without changing the packaging type-->
                <configuration>
                    <skipIfEmpty>true</skipIfEmpty>
                    <archive>
                        <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
                    </archive>
                </configuration>
            </plugin>
            <!--Add OSGI metadata to manifest-->
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <executions>
                    <execution>
                        <id>bundle-manifest</id>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>manifest</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <!--
         This section defines the default dependency settings inherited by
         child projects. Note that this section does not add dependencies, but
         rather provide default settings.
     -->
    <dependencyManagement>
        <dependencies>
            <!-- ModeShape subprojects -->
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-common</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-schematic</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jcr-tck</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-connector-git</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-ddl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-images</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-java</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-mp3</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-msoffice</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-sramp</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-teiid</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-text</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-xml</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-xsd</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-wsdl</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-sequencer-zip</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-extractor-tika</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-client</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-rest-war</artifactId>
                <version>${project.version}</version>
                <type>war</type>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-webdav</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-webdav-war</artifactId>
                <version>${project.version}</version>
           </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-webdav</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-web-jcr-webdav-war</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc-local</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jdbc</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-jbossas-subsystem</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.modeshape</groupId>
                <artifactId>modeshape-unit-test</artifactId>
                <version>${project.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${javax.servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.spec.javax.security.jacc</groupId>
                <artifactId>jboss-jacc-api_1.4_spec</artifactId>
                <version>${javax.jacc.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.seam</groupId>
                <artifactId>jboss-seam</artifactId>
                <version>${jboss.seam.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--
                Infinispan
            -->
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-core</artifactId>
                <version>${infinispan.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.woodstox</groupId>
                        <artifactId>woodstox-core-asl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.woodstox</groupId>
                        <artifactId>stax2-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-lucene-directory</artifactId>
                <version>${infinispan.version}</version>
            </dependency>
            <!--
                JGroups is used for the changes bus, but it's optional. Most of the times though, this will be in the classpath
                because of ISPN.
             -->
            <dependency>
                <groupId>org.jgroups</groupId>
                <artifactId>jgroups</artifactId>
                <version>${jgroups.version}</version>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-bdbje</artifactId>
                <version>${infinispan.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-jdbm</artifactId>
                <version>${infinispan.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.infinispan</groupId>
                <artifactId>infinispan-cachestore-jdbc</artifactId>
                <version>${infinispan.version}</version>
                <scope>test</scope>
            </dependency>
            <!--Required by infinispan-cachestore-jdbc -->
            <dependency>
                <groupId>c3p0</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0.version}</version>
                <scope>test</scope>
            </dependency>
            
            <!-- Hibernate Search engine (does not use Hibernate Core or JPA!) -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search-engine</artifactId>
                <version>${hibernate.search.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-search-analyzers</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-search-infinispan</artifactId>
                <version>${hibernate.search.version}</version>
            </dependency>
            <dependency>
              <!--
              To force testing of Apache Avro integration with the version of Jackson used in AS 7.1
              -->
              <groupId>org.codehaus.jackson</groupId>
              <artifactId>jackson-core-asl</artifactId>
              <version>${hibernate.search.jackson-core-asl.version}</version>
            </dependency>
            <dependency>
              <!--
              To force testing of Apache Avro integration with the version of Jackson used in AS 7.1
              -->
              <groupId>org.codehaus.jackson</groupId>
              <artifactId>jackson-mapper-asl</artifactId>
              <version>${hibernate.search.jackson-mapper-asl.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-regex</artifactId>
                <version>${lucene.regex.version}</version>
            </dependency>
            <!--
               Time and Date
               -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.time.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- Testing (note the scope) -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit-dep</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${hamcrest.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
                <version>${mockito.all.version}</version>
                <scope>test</scope>
            </dependency>
            <!--
            Byteman Dependencies, used for the bytecode injection during performance tests
            -->
            <dependency>
                <groupId>org.jboss.byteman</groupId>
                <artifactId>byteman-bmunit</artifactId>
                <version>${byteman.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.byteman</groupId>
                <artifactId>byteman-install</artifactId>
                <version>${byteman.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.byteman</groupId>
                <artifactId>byteman</artifactId>
                <version>${byteman.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Logging (all of the libraries should be optional, as the logging implementation falls back to JUL if nothig is found -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.api.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.log4j.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
                <scope>test</scope>
            </dependency>
            <!--WebDAV servlet-->
            <dependency>
                <groupId>org.jmock</groupId>
                <artifactId>jmock</artifactId>
                <version>${jmock.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.webmvc}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-mock</artifactId>
                <version>${spring.mock}</version>
                <scope>test</scope>
            </dependency>

            <!-- Apache chemistry -->
            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-commons-api</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-commons-impl</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-support</artifactId>
                <version>${chemistry.version}</version>
            </dependency>
            
            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-jcr</artifactId>
                <version>${chemistry.version}</version>
                <classifier>classes</classifier>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-server-bindings</artifactId>
                <version>${chemistry.version}</version>
                <classifier>classes</classifier>
            </dependency>

            <dependency>
                <groupId>org.apache.chemistry.opencmis</groupId>
                <artifactId>chemistry-opencmis-client-impl</artifactId>
                <version>${chemistry.version}</version>
            </dependency>

            <!--
                Demo module
            -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Java Content Repository API -->
            <dependency>
                <groupId>javax.jcr</groupId>
                <artifactId>jcr</artifactId>
                <version>${jcr.version}</version>
                <scope>compile</scope>
            </dependency>
            <!--
                   Apache JCR API unit tests (for any JCR implementation), which is a
                   subset of the official TCK
               -->
            <dependency>
                <groupId>org.apache.jackrabbit</groupId>
                <artifactId>jackrabbit-jcr-tests</artifactId>
                <version>${jackrabbit.jcr.tck.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Databases and JDBC Drivers -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${jdbc.mysql.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>hsqldb</groupId>
                <artifactId>hsqldb</artifactId>
                <version>${jdbc.hsqldb.version}</version>
                <scope>test</scope>
            </dependency>
            <!--
               JGit
               -->
            <dependency>
                <groupId>org.eclipse.jgit</groupId>
                <artifactId>org.eclipse.jgit</artifactId>
                <version>${jgit.version}</version>
            </dependency>
            <!--
               PicketBox (JAAS implementation used in test cases)
               -->
            <dependency>
                <groupId>org.picketbox</groupId>
                <artifactId>picketbox-bare</artifactId>
                <version>${picketbox.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>xalan</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xalan</groupId>
                        <artifactId>serializer</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>apache-xerces</groupId>
                        <artifactId>xercesImpl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
               JAX-B implementation used by some modules particularly the JBoss Console component
               -->
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>${sun.xml.bind.jaxbimpl.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!--
               Web Modules dependencies
            -->
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxrs</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-simple</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>jcl-over-slf4j</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.xml.stream</groupId>
                        <artifactId>stream.buffer</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jettison-provider</artifactId>
                <version>${resteasy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-multipart-provider</artifactId>
                <version>${resteasy.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.sun.xml.bind</groupId>
                        <artifactId>jaxb-impl</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.xml.stream</groupId>
                        <artifactId>stream.buffer</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.jettison</groupId>
                <artifactId>jettison</artifactId>
                <version>${jettison.version}</version>
                <exclusions>
                    <!-- This results in duplicate stax-api jars. This is the older one.
                         A newer is brought in by com.sun.xml.bind:jaxb-impl
                    -->
                    <exclusion>
                        <groupId>stax</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <!--WebDav client used for testing-->
            <dependency>
                <groupId>com.googlecode.sardine</groupId>
                <artifactId>sardine</artifactId>
                <version>${sardine.version}</version>
                <scope>test</scope>
            </dependency>

            <!--
                Sequencers
            -->

            <!-- Eclipse JDT artifacts declare their dependencies using ranges. (yikes!)
                 So we need to specify exact versions, and we can do that in a dependencyManagement section.
                 Here are the dependencies showing the last combination that we could get working:
                 +- org.eclipse.equinox:common:jar:3.3.0-v20070426:compile
                     +- org.eclipse.jdt:core:jar:3.3.0-v_771:compile
                     |  +- org.eclipse.core:resources:jar:3.3.0-v20070604:compile
                     |  |  \- org.eclipse.core:expressions:jar:3.3.0-v20070606-0010:compile
                     |  \- org.eclipse.core:runtime:jar:3.3.100-v20070530:compile
                     |     +- org.eclipse:osgi:jar:3.3.0-v20070530:compile
                     |     +- org.eclipse.core:jobs:jar:3.3.0-v20070423:compile
                     |     +- org.eclipse.equinox:registry:jar:3.3.0-v20070522:compile
                     |     +- org.eclipse.equinox:preferences:jar:3.2.100-v20070522:compile
                     |     \- org.eclipse.core:contenttype:jar:3.2.100-v20070319:compile
            -->
            <!--Java sequencer-->
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>common</artifactId>
                <version>${eclipse.equinox.common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jdt</groupId>
                <artifactId>core</artifactId>
                <version>${eclipse.jdt.core.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>resources</artifactId>
                <version>${eclipse.core.resources.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>expressions</artifactId>
                <version>${eclipse.core.expressions.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>runtime</artifactId>
                <version>${eclipse.core.runtime.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse</groupId>
                <artifactId>osgi</artifactId>
                <version>${eclipse.osgi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>jobs</artifactId>
                <version>${eclipse.core.jobs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>registry</artifactId>
                <version>${eclipse.equinox.registry.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.equinox</groupId>
                <artifactId>preferences</artifactId>
                <version>${eclipse.equinox.preferences.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.core</groupId>
                <artifactId>contenttype</artifactId>
                <version>${eclipse.core.contenttype.version}</version>
            </dependency>
            <dependency>
                <groupId>javassist</groupId>
                <artifactId>javassist</artifactId>
                <version>${javaassist.version}</version>
            </dependency>
            <!--Mp3 sequencer-->
            <dependency>
                <groupId>org</groupId>
                <artifactId>jaudiotagger</artifactId>
                <version>${jaudiotagger.version}</version>
            </dependency>
            <!--MsOffice sequencer-->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-scratchpad</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <!--Teiid sequencer-->
            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>
            <!--WSDL sequencer-->
            <dependency>
                <groupId>wsdl4j</groupId>
                <artifactId>wsdl4j</artifactId>
                <version>${wsdl4j.version}</version>
            </dependency>
            <!--XSD sequencer-->
            <dependency>
                <groupId>org.eclipse.xsd</groupId>
                <artifactId>xsd</artifactId>
                <version>${eclipse.xsd.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>common</artifactId>
                <version>${eclipse.emf.common.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore</artifactId>
                <version>${eclipse.emf.ecore.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore-change</artifactId>
                <version>${eclipse.emf.ecorechange.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.emf</groupId>
                <artifactId>ecore-xmi</artifactId>
                <version>${eclipse.emf.ecorexmi.version}</version>
            </dependency>

            <!--TIKA text extractor
                This Tika dependency brings in a lot of 3rd party libraries. We'll exclude
                most of them and only keep a few that are for Microsoft Office documents,
                HTML, XML and PDF. When others are needed, they can simply be added to
                an application's dependencies.
                
                Note that 'modeshape-jcr' excludes even more transitive dependencies, since it
                only uses the MIME type detector functionality, whereas the 'modeshape-extractor-tika'
                uses everything defined here.
                -->
            <dependency>
                <groupId>org.apache.tika</groupId>
                <artifactId>tika-parsers</artifactId>
                <version>${tika.version}</version>
                <exclusions>
                    <!--
                    The NetCDF and HDF files are often used in the scientific community, so we exclude this
                    library (and the Commons HTTP Client library) by default.
                    -->
                    <exclusion>
                        <groupId>edu.ucar</groupId>
                        <artifactId>netcdf</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-httpclient</groupId>
                        <artifactId>commons-httpclient</artifactId>
                    </exclusion>

                    <!--
                    Image metadata isn't often for text extraction,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>com.drewnoakes</groupId>
                        <artifactId>metadata-extractor</artifactId>
                    </exclusion>
                    <!--
                    RSS and Atom feeds aren't often used for text extraction,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>rome</groupId>
                        <artifactId>rome</artifactId>
                    </exclusion>
                    <!--
                    Boilerpipe HTML templates are likely not used,
                    so exclude this library by default.
                    -->
                    <exclusion>
                        <groupId>de.l3s.boilerpipe</groupId>
                        <artifactId>boilerpipe</artifactId>
                    </exclusion>
                    <!-- 
                    PDFBox declares the Bouncy Castle dependencies
                    as optional, and Tika always depends on them to avoid
                    problems with encrypted PDFs (see TIKA-370). 
                    We exclude them by default. 
                    -->
                    <exclusion>
                      <groupId>org.bouncycastle</groupId>
                      <artifactId>bcmail-jdk15</artifactId>
                    </exclusion>
                    <exclusion>
                      <groupId>org.bouncycastle</groupId>
                      <artifactId>bcprov-jdk15</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!--
                Schematic dependencies
            -->
            <dependency>
                <groupId>org.jboss.logging</groupId>
                <artifactId>jboss-logging</artifactId>
                <version>${jboss.logging.version}</version>
            </dependency>

            <dependency>
                <groupId>de.undercouch</groupId>
                <artifactId>bson4jackson</artifactId>
                <version>${bson4jackson.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.mongodb</groupId>
                <artifactId>mongo-java-driver</artifactId>
                <version>${mongo.driver.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- MongoDB binary store test -->
            <dependency>
                <groupId>de.flapdoodle.embed</groupId>
                <artifactId>de.flapdoodle.embed.mongo</artifactId>
                <version>${embedmongo.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.googlecode.json-simple</groupId>
                <artifactId>json-simple</artifactId>
                <version>${json.simple.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.jbossts</groupId>
                <artifactId>jbossjta</artifactId>
                <version>${jbossjta.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>commons-httpclient</artifactId>
                        <groupId>commons-httpclient</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>ironjacamar-spec-api</artifactId>
                        <groupId>org.jboss.ironjacamar</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-spi</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-processor</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-generator</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jbossws-native-core</artifactId>
                        <groupId>org.jboss.ws.native</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>emma</artifactId>
                        <groupId>emma</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>emma_ant</artifactId>
                        <groupId>emma</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>hornetq-core</artifactId>
                        <groupId>org.hornetq</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>netty</artifactId>
                        <groupId>org.jboss.netty</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>wrapper</artifactId>
                        <groupId>tanukisoft</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jacorb</artifactId>
                        <groupId>jacorb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jfreechart</artifactId>
                        <groupId>jfree</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-corba-ots-spi</artifactId>
                        <groupId>org.jboss.integration</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-server-manager</artifactId>
                        <groupId>org.jboss.jbossas</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-ejb-api_3.1_spec</artifactId>
                        <groupId>org.jboss.spec.javax.ejb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jnp-client</artifactId>
                        <groupId>org.jboss.naming</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-servlet-api_3.0_spec</artifactId>
                        <groupId>org.jboss.spec.javax.servlet</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jbossws-common</artifactId>
                        <groupId>org.jboss.ws</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jcl-over-slf4j</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>stax-api</artifactId>
                        <groupId>stax</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>idl</artifactId>
                        <groupId>jacorb</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logging-tools</artifactId>
                        <groupId>org.jboss.logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-connector-api_1.5_spec</artifactId>
                        <groupId>org.jboss.spec.javax.resource</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-transaction-spi</artifactId>
                        <groupId>org.jboss.integration</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-remoting</artifactId>
                        <groupId>org.jboss.remoting</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>dom4j</artifactId>
                        <groupId>dom4j</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>commons-codec</artifactId>
                        <groupId>commons-codec</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-logmanager</artifactId>
                        <groupId>org.jboss.logmanager</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>hibernate-jpa-2.0-api</artifactId>
                        <groupId>org.hibernate.javax.persistence</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>commons-logging</artifactId>
                        <groupId>commons-logging</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jcommon</artifactId>
                        <groupId>jfree</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>jboss-transaction-api_1.1_spec</artifactId>
                        <groupId>org.jboss.spec.javax.transaction</groupId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!--
                JBOSS AS subsystem
            -->
            <dependency>
                <groupId>javax.resource</groupId>
                <artifactId>connector-api</artifactId>
                <version>${javax.connector-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>javax.transaction</groupId>
                <artifactId>jta</artifactId>
                <version>${javax.jta.version}</version>
                <scope>provided</scope>
            </dependency>

            <!--dependency>
                <groupId>org.jboss</groupId>
                <artifactId>jboss-common-core</artifactId>
                <version>${jboss.common.core.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logging</groupId>
                        <artifactId>jboss-logging-spi</artifactId>
                    </exclusion>
                </exclusions>
            </dependency-->
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-controller</artifactId>
                <version>${jbossas-version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-naming</artifactId>
                <version>${jbossas-version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-clustering-jgroups</artifactId>
                <version>${jbossas-version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.as</groupId>
                <artifactId>jboss-as-subsystem-test</artifactId>
                <version>${jbossas-version}</version>
                <scope>test</scope>
            </dependency>
            <!--dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-xjc</artifactId>
                <version>${xjc.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency-->

            <dependency>
                <groupId>org.jboss.ironjacamar</groupId>
                <artifactId>ironjacamar-depchain</artifactId>
                <version>${version.org.jboss.ironjacamar}</version>
                <type>pom</type>
                <!-- scope>import</scope -->
            </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-spec-api</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-common-api</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-common-spi</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-common-impl</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-common-impl-papaki</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-core-api</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-core-impl</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-deployers-common</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-deployers-fungal</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-embedded-arquillian</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-embedded</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.jboss.ironjacamar</groupId>
            <artifactId>ironjacamar-validator</artifactId>
            <version>${version.org.jboss.ironjacamar}</version>
            <scope>test</scope>
        </dependency>

        </dependencies>
    </dependencyManagement>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${version.surefire.plugin}</version>
            </plugin>
        </plugins>
    </reporting>

</project>
